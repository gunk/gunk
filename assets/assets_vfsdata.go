// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets contains project assets.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 12, 10, 17, 48, 11, 637015067, time.UTC),
		},
		"/google_api_annotations.fdp": &vfsgen۰CompressedFileInfo{
			name:             "google_api_annotations.fdp",
			modTime:          time.Date(2018, 12, 10, 17, 48, 11, 629015079, time.UTC),
			uncompressedSize: 8568,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\xcd\x6f\x1b\xc9\x95\x37\x3f\x45\x3e\x52\x54\xab\x24\xdb\x6d\x8d\x3d\x96\x39\x1f\x96\x3d\x63\x6a\xe0\xef\x91\x17\xb3\x4b\x8a\x6d\x99\x1e\x49\xe4\x36\xa5\x9d\x0f\x60\xd1\x28\x75\x17\xc9\xb6\x9b\xdd\x3d\xdd\x45\xdb\x1a\xec\xc1\xc0\x9e\xf6\xb4\x40\x4e\x41\x12\xe4\x90\xcb\x04\x41\x0e\x39\x05\x08\x90\x43\xce\x39\x04\x98\x6b\x4e\x41\x12\x20\xf9\x13\x72\x0c\xea\xa3\x9b\xcd\x0f\x8d\x35\x83\xcc\xcc\x89\x5d\xef\xfd\xde\xab\x57\xaf\x5e\xd5\x7b\x55\x45\xf8\x65\x0e\xce\xf6\x3d\xaf\xef\x90\x4d\xec\xdb\x9b\x03\x4a\xfd\x9a\x1f\x78\xd4\x43\x20\xc8\x35\xec\xdb\xd5\x63\xc8\x3e\xa2\xd4\x47\xd7\x21\x17\x8c\x1c\x12\xaa\xa9\xf5\xcc\x46\xe9\xe6\x6a\x6d\x8c\xa9\x31\x80\x3e\x72\x88\x2e\x20\x48\x83\xcb\xbd\x91\xe3\x1c\x1b\x16\x31\x3d\x8b\x18\x01\x09\x49\xf0\x8c\x58\x06\x79\xe1\x63\x37\xb4\x3d\x57\x4d\xaf\xa7\x36\x0a\xfa\x45\x0e\x6b\x72\x94\x2e\x41\x5a\x84\xa9\xfe\x31\x0d\x85\x48\x35\x5a\x83\x42\x48\x1c\x62\x52\x2f\x50\x53\xeb\xa9\x8d\xa2\x1e\xb7\x11\x82\x4c\x9f\x50\xae\xb3\xf8\xe8\x8c\xce\x1a\x8c\xe6\x8f\xa8\x9a\x89\x68\xfe\x88\xa2\x55\xc8\xfa\x5e\x48\xd5\xac\x24\xf2\x16\x52\x21\x6f\x11\x87\x50\xa2\xe6\x24\x5d\xb6\xd1\x39\xc8\xf9\x98\x9a\x03\x35\x2f\x19\xa2\x89\xee\x41\xde\x1c\x85\xd4\x1b\xaa\x85\xf5\xd4\x46\xe9\xe6\xa5\xa4\x33\xb6\x39\x87\xd9\xdd\xc1\x94\x92\xc0\x65\x0a\x05\x1c\x21\xc8\x1e\x79\xd6\xb1\xba\xc0\x07\xc0\xbf\xd1\x1b\xb0\x18\x90\xd0\xf7\xdc\x90\x18\x9c\x59\xe6\xcc\x72\x44\x6c\x30\x90\x06\x2b\xd8\xb2\x6c\x6a\x7b\x2e\x76\x8c\x23\xdb\xb5\x6c\xb7\x1f\xaa\xa5\xaf\x98\x0b\x34\x16\x68\x48\x7c\xa3\x08\x0b\xbe\x30\xaa\xfa\x00\x96\x67\x2c\x65\xf6\x3d\xb5\x5d\x4b\x3a\x98\x7f\x33\x9a\x8f\xe9\x40\x78\x57\xe7\xdf\x8d\x27\x50\x31\xbd\x61\xa2\xdb\x46\x91\xab\x61\xd1\xd3\x49\x7d\x5a\x97\x8c\xbe\xe7\x60\xb7\x5f\xf3\x82\xfe\x66\x9f\xb8\x3c\xb6\x36\x05\x0b\xfb\x76\xc8\xa3\x0e\xbb\xae\x47\x31\x33\x33\x7c\x90\xf8\xfe\x47\x2a\xf5\xb3\x74\x76\xa7\xde\x69\x1d\xe5\xb9\xdc\x2d\xf8\xf1\x03\x58\x97\xe1\xca\x29\x47\xa3\xde\xa6\x45\x42\x33\xb0\x7d\xea\x05\x32\x72\x97\x64\xcf\x11\xa2\xba\x07\xcb\x0f\x6d\x87\x34\x63\x60\x97\x50\x74\x1f\xb2\x3d\xdb\x21\x32\x94\xdf\xac\x4d\x09\xd5\x26\x25\xf8\xa8\x74\x2e\x51\xfd\x6b\x16\x56\xe6\x70\x99\x93\x5c\x3c\x24\x91\xe3\xd8\x37\x52\x99\xb3\xcd\xa7\xb8\x4f\xa4\xef\xa2\x26\x7a\x1d\xc0\x22\x3e\x71\x2d\xe2\x9a\xc7\x6a\x66\x3d\xb3\x51\xd4\x13\x14\xf4\x0e\x2c\xfb\xa3\x23\xc7\x36\x8d\x04\x0c\xd6\x33\x1b\x39\x5d\x11\x8c\xe6\x18\x7c\x15\x96\x9e\x13\xfc\x34\x09\x2d\x71\x68\x85\x91\x13\xc0\x6d\x28\x0f\x49\x18\xe2\x3e\x31\xe8\xb1\x4f\xd4\x2c\x1f\xfd\xfa\xcc\xe8\xa7\x47\x5e\x92\x52\x07\xc7\x3e\x41\x75\x28\x12\x77\x34\x14\x1a\x72\x27\xf8\x4f\x73\x47\xc3\x69\x2d\x05\x26\x26\x55\x2c\xb0\x95\x6e\x9b\x44\xcd\x73\x05\x57\x67\x14\x74\x05\x7f\x5a\x47\x24\x87\xb6\xa1\x48\x5e\x50\x22\xb6\x92\x05\xae\xe4\xad\x39\xb3\x48\x1c\x6b\x5a\xc5\x58\x0e\xdd\x85\x05\xcf\xe7\xd1\x26\x97\xf1\xc5\xb9\x81\xd0\x16\x18\x3d\x02\xa3\x16\x28\xa1\x37\x0a\x4c\x62\xf0\xcd\xcd\x76\x7b\x9e\x5a\xe4\x0a\x2e\xcf\x0e\x84\x03\xb7\x3d\x8b\xb4\xdc\x9e\xa7\x57\xc2\x89\x36\x3a\x07\xf9\xf0\xd8\xa5\xf8\x85\x5c\xf4\xb2\x55\xfd\x4d\x1e\x96\x4e\x13\x62\x0f\x20\xd7\x63\xa3\x54\xd3\x5f\xc7\x07\x42\x66\xd2\x89\xf9\x6f\xe8\xc4\x3a\x94\x5c\x12\x52\x62\x89\x88\xc8\x9c\x32\xa6\x40\x08\xcd\x86\x54\xf6\x1b\x85\xd4\xc7\xb0\x14\x9b\x64\x04\xd8\xed\x47\xb1\xb9\xf9\x2a\x4b\x6a\x5a\x24\xa7\x33\x31\xbd\x42\x26\xda\xa8\x09\xe0\xb9\xc4\xeb\xb1\x54\xe6\xa8\x85\x13\xbc\xd4\x66\x90\x19\x2f\x79\x82\x6a\x3a\xe8\xfd\x71\xa8\x2d\x9c\x10\x29\x7b\x62\x91\xcd\x44\xdb\x21\x54\xe2\xf4\x29\x46\x56\xe4\x46\xd4\x5e\x39\xb2\x28\xa1\x8a\x81\x2d\x06\xc9\xa6\xcc\x3a\x42\x2d\x0f\x2b\xe0\xbb\x50\x39\x22\xee\xe3\x21\x59\xfb\x1c\x2a\x93\xee\x41\xab\x90\x0b\x29\x0e\x28\x8f\xc2\x9c\x2e\x1a\x48\x81\x0c\x71\x2d\xbe\xcb\xe5\x74\xf6\x89\xfe\x63\x3c\xe0\x0c\x1f\xf0\xdb\xb3\x33\x3a\xa1\x79\x7a\xdc\x6b\xf7\x60\x71\x62\x00\xa7\xed\xba\xfa\x3f\x70\x76\xae\x6a\xf4\x31\xac\x8e\x5c\xdb\xa5\x24\xf0\x03\xc2\x22\x56\x74\xa5\xfe\x6d\xe1\x84\x98\x3b\x4c\xa2\x85\x16\x7d\x65\x34\x4b\xbc\x5e\x2c\xfc\x7d\x41\x79\xf9\xf2\xe5\xcb\x74\xf5\x87\x79\x58\x9d\xb7\x66\xe6\x2e\xdf\x73\x90\x77\x47\xc3\x23\x12\x70\x27\xe5\x74\xd9\x42\x75\xc8\x39\xf8\x88\x38\xbc\x50\xa9\xdc\x7c\xe7\x54\xab\xb2\xb6\xcb\x44\x74\x21\x89\x3e\x80\xac\xdc\xa2\x99\x86\xeb\xa7\xd3\xc0\xd6\x92\xce\xe5\xd0\x6b\x50\x64\xbf\x22\x36\xf2\xa2\xde\x62\x04\x16\x17\xac\x16\xe3\xcb\xc4\x22\x51\x6a\x8b\xdb\x2c\xb0\x2c\xd2\xc3\x23\x87\x1a\xcf\xb0\x33\x22\xb2\xd6\x29\x4b\xe2\x7f\x31\x1a\xba\x0c\x25\xb1\xaa\x6c\xd7\x22\x2f\xf8\xee\x99\xd3\xc5\x42\x6b\x31\x0a\xeb\xfe\x49\xe8\xb9\x51\x68\xf2\x2e\x18\x81\x77\x7f\x6f\x7a\xe3\xbe\x34\x7f\x78\xd3\x31\x55\xfd\x75\x1a\xb2\x7c\xbf\x58\x82\xd2\xc1\x27\x1d\xcd\x68\xb6\x0f\x1b\xbb\x9a\x92\x42\x15\x00\x4e\x78\xb8\xdb\xae\x1f\x28\xe9\xb8\xdd\xda\x3f\xb8\x7b\x5b\xc9\xc4\x02\x87\x82\x90\x4d\x02\x6e\xdd\x54\x72\x48\x81\xb2\x50\xd0\xfa\x58\x6b\xde\xbd\xad\xe4\x27\x29\xb7\x6e\x2a\x0b\x68\x11\x8a\x9c\xd2\x68\xb7\x77\x95\x42\xac\xb3\x7b\xa0\xb7\xf6\x77\x94\x62\xac\x73\x47\x6f\x1f\x76\x14\x88\x35\xec\x69\xdd\x6e\x7d\x47\x53\x4a\x31\xa2\xf1\xc9\x81\xd6\x55\xca\x13\x66\xdd\xba\xa9\x2c\xc6\x5d\x68\xfb\x87\x7b\x4a\x05\x2d\xc3\xa2\xe8\x22\x32\x62\x69\x8a\x74\xf7\xb6\xa2\x8c\x0d\x11\x5a\x96\x27\x08\x77\x6f\x2b\xa8\xba\x0d\x39\x1e\x5d\x08\x41\x65\xb7\xde\xd0\x76\x8d\x76\xe7\xa0\xd5\xde\xaf\xef\x2a\xa9\x31\x4d\xd7\xfe\xf3\xb0\xa5\x6b\x4d\x25\x9d\xa4\x75\xb4\xfa\x81\xd6\x54\x32\x55\x13\x56\xe7\xed\x93\x73\x57\x46\x62\x8a\xd3\x27\x4c\x31\xd7\x35\x33\xc5\x7f\x49\xc3\xca\x9c\x5c\x31\xb7\x93\x7f\x87\x9c\x08\x51\x91\x3d\xaf\xcd\x4d\x3a\x3c\x60\x67\x32\x28\x97\x4b\x56\x10\x99\x13\x2a\x08\xa6\x62\x66\x4f\xff\xef\x99\x3d\x5d\xa4\xbd\xbb\xa7\x49\x7b\x9c\xf6\xf5\xf6\xf6\xdc\x9c\xbd\xfd\x01\x2c\xcf\x28\x3a\xf5\x1e\xfb\xbf\x29\x50\x4f\x72\xce\x2b\x76\xba\xf4\xc4\x4e\xf7\x60\xda\x83\x57\x4e\x9e\x84\x99\xb9\xfe\x22\x05\xe7\xe6\x57\x8a\x73\x6d\xf8\x00\xf2\x43\x42\x07\x5e\x54\x2d\xcd\xa6\xa4\x3d\xce\x9e\x9e\x6c\x29\x95\x4c\xe2\x99\x93\xca\x3d\x61\xcd\x8c\xa5\xff\x97\x86\xb3\x73\x95\xcf\x35\xf4\x12\x80\xed\xfa\x23\x2a\x2a\x22\xb1\xc1\x16\x39\x85\x6f\x5e\x6c\xf3\x1c\xd1\x98\xcf\x4f\xb8\x3a\x08\x12\x07\xdc\x1f\x1b\x9a\xe5\x86\xbe\x7e\xc2\x48\x67\x02\xf3\x3d\x50\x4c\xc7\x26\x2e\x35\x42\x1a\x10\x3c\xb4\xdd\x3e\xcf\x20\x85\xad\x5c\x0f\x3b\x21\xd1\x97\x04\xbb\x1b\x71\x99\x04\x0f\xa0\x20\x21\x91\x9f\x90\x10\xec\x58\xa2\xfa\x83\x22\x94\x12\x75\x35\xba\x02\xe5\x27\xf8\x19\x36\xa2\xb3\x92\xf0\x44\x89\xd1\x3a\xf2\xbc\xf4\x1e\xac\x72\x88\x37\xa2\x24\x30\x4c\x07\x87\x21\x77\x5a\x81\x43\x11\xe3\xb5\x19\x6b\x3b\xe2\xa0\x3b\xb0\xc2\x25\x86\x23\x87\xda\xbe\x43\x0c\x76\x7a\x0b\x79\x26\x89\x2d\x5b\x66\x88\x3d\x09\x60\x16\x85\xa8\x09\x97\xb8\x58\x9f\xb8\x24\xc0\x94\x18\xe4\xb3\x11\x76\x42\x03\xbb\x96\x31\xc0\xe1\x40\x5d\x65\x0a\x1a\x69\x35\xa5\x5f\x60\xc0\x1d\x89\xd3\x38\xac\xee\x5a\x8f\x70\x38\x40\x5b\x70\x8e\x6b\x09\x69\x60\xbb\x7d\xc3\x1c\x10\xf3\xa9\x31\xa2\xbd\xfb\xea\x6b\xc9\xfe\xb9\x85\x5d\x8e\xd9\x66\x90\x43\xda\xbb\x8f\xba\x50\x66\x93\x31\xb4\x3f\x27\x46\xcf\x0b\x78\x6a\xac\xcc\xd9\x9a\x12\x1e\xac\xb5\xa5\xc0\x9e\x67\x91\xad\x5c\xb7\xa3\x69\x4d\xbd\x14\x69\x79\xe8\x05\x2c\xa0\xfa\x5e\xec\xe0\x92\x08\xa8\xbe\x17\xb9\xf7\x0e\xac\x98\xa6\x18\xb3\x6d\x1a\xf2\x8c\x15\xaa\xca\x84\xb3\x4c\x73\x47\x00\x64\x8c\x87\xe8\x7d\x38\x3b\x76\x56\x52\x70\x79\x66\x94\xd3\xa2\x77\x60\xc5\x3f\x9e\x15\x44\x13\x3d\xfa\xc7\xd3\x62\xf7\x60\xd5\x1f\xf8\xb3\x72\xd7\x93\x72\xc8\x1f\xf8\xd3\x82\x6f\xf1\x03\x77\x40\x4c\x4c\x89\xa5\x9e\x4f\xc2\x13\x0c\xb4\x09\x8a\x69\x1a\xc4\xc5\x47\x0e\x31\x70\x40\x5c\x1c\xaa\x97\x93\xe0\x8a\x69\x6a\x9c\x5b\xe7\x4c\x74\x1d\x96\xbd\xa3\x27\xa6\x08\x49\xc3\x0f\x48\xcf\x7e\xa1\xbe\xc9\xfd\xbb\xc4\x18\x3c\x20\x3b\x9c\x8c\xae\x81\x62\x86\x03\x1c\xf8\x7c\x4f\x0e\x7d\x6c\x12\xf5\x2d\x01\x15\xf4\xfd\x88\xcc\x96\x44\xf8\xdc\xee\xd1\x48\xe3\x55\xb1\x24\x38\x4d\x6a\xdb\x00\x85\xb9\x62\xa2\xe3\x0d\x0e\xab\xf8\x03\x3f\xd9\xef\x1b\xb0\xc8\x90\xe3\x4e\xaf\x89\x82\xcc\x1f\x24\x7a\xbc\x0d\xe7\x18\x68\x48\x28\xb6\x30\xc5\x09\xf4\xbb\x1c\xcd\xfc\xbe\x27\x99\x13\x76\x06\xa3\xa3\xe3\x38\xb2\x6e\x08\x3b\x19\x2d\x8a\xad\x6f\xad\xe8\xae\x6e\x41\x39\x19\xf8\xa8\x08\x22\xf4\x95\x14\xab\x82\xb6\xdb\x4d\x56\xbf\x7c\xaa\x29\x69\x56\x47\xed\xb6\x0e\x34\x43\x3f\xdc\x3f\x68\xed\x69\x4a\x26\x51\xb0\x3f\xce\x16\xde\x56\xae\x56\xbf\x4c\x43\x65\xf2\x04\x86\xfe\x0d\xce\x47\xd7\x25\x21\xa1\xc6\x73\x3b\xe0\x2b\x72\x88\x45\x76\x8c\x63\x62\x55\xa2\xba\x84\x7e\x64\x07\x6c\xbd\x0d\x31\x45\xbb\x70\xd9\xf5\x8c\x90\x62\xd7\xc2\x81\x65\x8c\x2f\xaa\x0c\x6c\x9a\x24\x0c\x3d\x91\x09\x63\x2d\x17\x5d\xaf\x2b\xc1\xe3\x14\x51\x97\xd0\xa9\xf8\xcd\x9c\x14\xbf\xaf\x41\x71\x88\x7d\x83\xb8\x34\x10\x77\x8c\x05\xbd\x30\xc4\xbe\xc6\xda\xdf\xc9\xf1\xe7\x71\xb6\x50\x50\x8a\x8f\xb3\x85\xa2\x02\xd5\x3f\x67\xa0\x9c\xac\xc3\xd9\xb1\xc6\xe4\x29\x2b\xc5\x37\xb5\x37\xbe\xb2\x6a\xaf\x6d\xb3\x5c\xb6\x95\x17\xd5\xb1\x2e\x24\x59\x1d\xc1\x82\x8d\x58\xf2\x02\x59\xb6\xd0\x0e\xe4\x9f\x84\x5c\x77\x9e\xeb\x9e\x77\xa7\x97\xd0\xfd\xb8\xcb\x95\x17\x1f\x77\x8d\xfd\xb6\xbe\x57\xdf\xd5\xa5\x38\xba\x00\x59\x07\x7f\x7e\x3c\x99\xf5\x38\xe9\xb4\x93\x70\x01\xb2\xcf\x09\x7e\x3a\x99\x6b\x38\xe9\x5b\x5c\x0c\x9b\x90\xe3\xfe\x42\x00\xd2\x63\xca\x19\x54\x80\xec\x76\x5b\x67\x0b\x42\x81\xb2\xa0\x1a\x9d\x96\xb6\xad\x29\xe9\xea\x1d\xc8\x0b\x27\xb0\xc5\x12\xbb\x41\x39\x23\x9b\x52\x47\x2a\xe2\x1e\xee\x35\x34\x5d\x49\x4f\x4e\x75\x56\xc9\x55\x43\x28\x27\x0b\xf1\xef\xe6\x90\xfd\xbb\x14\x94\x12\x85\x35\xab\x88\xb0\xe3\x78\xcf\x0d\xec\xd8\x38\x94\xa1\x01\x9c\x54\x67\x94\xd3\x4e\xdd\x77\xb4\x44\x72\x4a\xbe\xfa\xd3\x14\x28\xd3\x95\xed\x94\x99\xa9\xef\xd3\xcc\xea\x4f\x52\x50\x99\x2c\x67\xa7\xcc\xbb\xf2\xbd\x9a\xf7\xa7\x34\x2c\x4e\x14\xb1\xa7\xb5\xee\x33\x58\xb6\x2d\x32\xf4\x3d\x4a\x5c\xf3\xd8\x70\xc8\x33\xe2\xa8\x55\xbe\x69\xcc\x5e\x16\x4e\xf4\x50\x6b\x8d\xe5\x76\x99\xd8\xd6\x4a\xab\xa9\xed\x75\xda\x07\xda\xfe\xf6\x27\xc6\xe1\xfe\x87\xfb\xed\x8f\xf6\x75\xc5\x9e\x82\x7d\x8b\xcb\xbe\x03\xca\xb4\x51\xe8\x3c\xcc\x33\x4b\x39\x83\x56\x60\x69\xbf\x6d\x74\x5b\x4d\xcd\xd0\x1e\x3e\xd4\xb6\x0f\xba\xe2\xe2\x23\x46\x1f\x4c\x2c\xf0\xea\x8f\x32\xb0\x32\xc7\x12\x54\x97\x47\x16\x71\x8a\xba\x71\x1a\xeb\x6b\xac\x66\xe8\xe0\x80\xca\x13\xce\x35\x60\x5e\x72\xa9\xdd\xb3\x49\x20\xef\x89\xc4\x39\x66\x69\x4c\x17\x57\x45\xef\x02\xf2\xbd\xd0\xa6\xf6\x33\x62\xd8\x6e\x74\xa9\xc4\xce\x35\x59\x5d\x89\x38\x2d\x97\xc6\x68\x97\xf4\xf1\x14\x9a\x6d\xe6\x19\x5d\x89\x38\x31\xfa\x0a\x94\x2d\x6f\xc4\x8a\x3d\x81\x63\xb9\x23\xa5\x97\x04\x2d\x86\xc8\x32\x7e\x7c\x9b\x55\xd6\x4b\x82\x26\x20\x57\x61\x09\xf7\xfb\x01\x53\x1e\x29\x12\x07\x93\x4a\x4c\xe6\xc0\xb5\xc7\x50\x88\xfc\xc0\x52\x35\xf3\x84\xe1\x8b\xd3\x76\x7a\xa3\xa8\x17\xdc\x88\x79\x05\xca\x76\x68\x8c\x2f\xe7\xd3\xeb\xe9\x8d\x82\x5e\xb2\xc3\xf8\x62\xb3\xfa\x45\x1a\x2a\x93\x8f\x0b\xa8\x09\x05\xc7\x33\xf9\xfb\x99\x7c\xd9\xda\x78\xc5\x7b\x44\x6d\x57\xe2\xf5\x58\x72\xed\x0f\x29\x28\x44\x64\x74\x4e\xbe\xfd\x31\x75\xb9\x46\x5a\x49\x89\xf7\x3f\x46\x0f\x7d\xec\xf2\x10\x90\x74\xd6\x66\xf3\xea\x10\x6c\xf1\x53\x8f\x37\x1c\x12\x97\x86\xd1\xbc\x4a\xfa\xb6\x24\xa3\x77\x60\x99\x06\xd8\x76\x26\xb0\xfc\x61\x56\x57\x22\x46\x0c\xde\x82\x0b\x91\x5e\x8b\x50\x6c\x0e\x88\x35\x16\xca\xf3\xdb\x8d\xf3\x12\xd0\x94\xfc\x48\xb6\xfa\x65\x0a\x96\xa3\x73\x9a\x15\x3b\x6b\x0f\x60\xfc\xdc\x28\xdd\x35\x1b\xca\x33\x72\xb5\x7a\x2c\xa4\x27\x14\xac\x0d\x01\xc6\x9c\x13\xdd\x76\x19\x4a\xf2\xe5\x88\x3f\x3f\x8a\x93\x3d\x08\x12\x3b\xd0\xa1\x55\xc8\x1d\x91\xbe\xed\xca\xfb\x60\xd1\x88\xee\x5f\xb2\xf1\xfd\x4b\xe3\xff\x53\xb0\x92\x78\x80\x8d\xec\x6d\x28\x53\xd7\x0b\xe1\xa3\xd4\xa7\x1f\xf4\x6d\x3a\x18\x1d\xd5\x4c\x6f\xb8\x29\x1e\x64\xc7\xef\xa7\xfc\xc3\xbc\xd1\x27\xee\x8d\xbe\x97\x78\x4d\x7d\x30\xfe\xe4\x2f\xb1\x99\x9d\x4e\xe3\x17\xe9\xb5\x1d\xd1\x5d\x27\x72\x8f\x4e\x7a\x0e\x31\xd9\x90\xe1\xe7\x69\xb8\x98\xf8\x33\x41\xe2\x29\x77\xf6\x3f\x05\x6b\xf3\xff\x76\xb0\xf6\xca\xe7\xdd\xad\x0f\x21\xcb\xf0\xe8\x15\x17\x1a\xea\xaf\x7e\xff\xdb\x2a\xbf\xf9\x98\xff\x34\xce\x95\x34\xdc\x99\x47\x6c\x65\x3c\x87\xe1\xbf\xee\x2d\x7b\xea\x21\xfb\x9f\x01\x00\x00\xff\xff\x43\xab\x45\xab\x78\x21\x00\x00"),
		},
		"/google_protobuf_duration.fdp": &vfsgen۰CompressedFileInfo{
			name:             "google_protobuf_duration.fdp",
			modTime:          time.Date(2018, 12, 10, 17, 48, 11, 637015067, time.UTC),
			uncompressedSize: 246,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xfa\xcc\xc8\x25\x97\x9e\x9f\x9f\x9e\x93\xaa\x5f\x50\x94\x5f\x92\x9f\x54\x9a\xa6\x9f\x52\x5a\x94\x58\x92\x99\x9f\xa7\x07\x16\x11\xe2\x87\xc8\xeb\xc1\xe4\x95\xac\xb8\x38\x5c\xa0\x4a\x84\x24\xb8\xd8\x8b\x53\x93\xf3\xf3\x52\x8a\x25\x18\x15\x18\x35\x98\x83\x60\x5c\x21\x11\x2e\xd6\xbc\xc4\xbc\xfc\x62\x09\x26\x05\x46\x0d\xd6\x20\x08\xc7\xa9\x86\x4b\x38\x39\x3f\x57\x0f\xcd\x48\x27\x5e\x98\x81\x01\x20\x91\x00\xc6\x28\xad\xf4\xcc\x92\x8c\xd2\x24\xbd\xe4\xfc\x5c\xfd\xf4\xfc\x9c\xc4\xbc\x74\x84\xfb\x0a\x4a\x2a\x0b\x52\x8b\xe1\xce\xfc\xc1\xc8\xb8\x88\x89\xd9\x3d\xc0\x69\x15\x93\x9c\x3b\xc4\xdc\x00\xa8\x52\xbd\xf0\xd4\x9c\x1c\xef\xbc\xfc\xf2\xbc\x10\x90\x96\x24\x36\xb0\x19\xc6\x80\x00\x00\x00\xff\xff\x33\x9a\x8e\xb0\xf6\x00\x00\x00"),
		},
		"/google_protobuf_empty.fdp": &vfsgen۰CompressedFileInfo{
			name:             "google_protobuf_empty.fdp",
			modTime:          time.Date(2018, 12, 10, 17, 48, 11, 633015073, time.UTC),
			uncompressedSize: 186,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xda\xce\xc8\x25\x9d\x9e\x9f\x9f\x9e\x93\xaa\x5f\x50\x94\x5f\x92\x9f\x54\x9a\xa6\x9f\x9a\x5b\x50\x52\xa9\x07\xe6\x0a\xf1\x43\x24\xf5\x60\x92\x4a\xec\x5c\xac\xae\x20\x79\xa7\x32\x2e\xe1\xe4\xfc\x5c\x3d\x34\x79\x27\x2e\xb0\x6c\x00\x88\x1b\xc0\x18\xa5\x9e\x9e\x59\x92\x51\x9a\xa4\x97\x9c\x9f\xab\x9f\x9e\x9f\x93\x98\x97\x8e\xb0\xa6\xa0\xa4\xb2\x20\xb5\x18\x62\xdb\x0f\x46\xc6\x45\x4c\xcc\xee\x01\x4e\xab\x98\xe4\xdc\x21\x26\x06\x40\xd5\xe9\x85\xa7\xe6\xe4\x78\xe7\xe5\x97\xe7\x85\x80\xd4\x27\xb1\x81\x0d\x30\x06\x04\x00\x00\xff\xff\x6a\xa1\x27\x87\xba\x00\x00\x00"),
		},
		"/google_protobuf_timestamp.fdp": &vfsgen۰CompressedFileInfo{
			name:             "google_protobuf_timestamp.fdp",
			modTime:          time.Date(2018, 12, 10, 17, 48, 11, 637015067, time.UTC),
			uncompressedSize: 250,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xfa\xce\xc8\x25\x9f\x9e\x9f\x9f\x9e\x93\xaa\x5f\x50\x94\x5f\x92\x9f\x54\x9a\xa6\x5f\x92\x99\x9b\x5a\x5c\x92\x98\x5b\xa0\x07\x16\x12\xe2\x87\x28\xd0\x83\x29\x50\xb2\xe6\xe2\x0c\x81\xa9\x11\x92\xe0\x62\x2f\x4e\x4d\xce\xcf\x4b\x29\x96\x60\x54\x60\xd4\x60\x0e\x82\x71\x85\x44\xb8\x58\xf3\x12\xf3\xf2\x8b\x25\x98\x14\x18\x35\x58\x83\x20\x1c\xa7\x3a\x2e\xe1\xe4\xfc\x5c\x3d\x34\x33\x9d\xf8\xe0\x26\x06\x80\x84\x02\x18\xa3\xb4\xd3\x33\x4b\x32\x4a\x93\xf4\x92\xf3\x73\xf5\xd3\xf3\x73\x12\xf3\xd2\x11\x4e\x2c\x28\xa9\x2c\x48\x2d\x46\xb8\xf4\x07\x23\xe3\x22\x26\x66\xf7\x00\xa7\x55\x4c\x72\xee\x10\x93\x03\xa0\x6a\xf5\xc2\x53\x73\x72\xbc\xf3\xf2\xcb\xf3\x42\x40\x7a\x92\xd8\xc0\x86\x18\x03\x02\x00\x00\xff\xff\x7f\x01\x67\x9c\xfa\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/google_api_annotations.fdp"].(os.FileInfo),
		fs["/google_protobuf_duration.fdp"].(os.FileInfo),
		fs["/google_protobuf_empty.fdp"].(os.FileInfo),
		fs["/google_protobuf_timestamp.fdp"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
