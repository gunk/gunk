// source: all.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var testdata_tld_util_imported_all_pb = require('./imported/all_pb.js');
goog.object.extend(proto, testdata_tld_util_imported_all_pb);
goog.exportSymbol('proto.testdata.v1.util.CheckStatusResponse', null, global);
goog.exportSymbol('proto.testdata.v1.util.Status', null, global);
goog.exportSymbol('proto.testdata.v1.util.UtilTestRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testdata.v1.util.CheckStatusResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.testdata.v1.util.CheckStatusResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testdata.v1.util.CheckStatusResponse.displayName = 'proto.testdata.v1.util.CheckStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.testdata.v1.util.UtilTestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.testdata.v1.util.UtilTestRequest.repeatedFields_, null);
};
goog.inherits(proto.testdata.v1.util.UtilTestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.testdata.v1.util.UtilTestRequest.displayName = 'proto.testdata.v1.util.UtilTestRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testdata.v1.util.CheckStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.testdata.v1.util.CheckStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testdata.v1.util.CheckStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testdata.v1.util.CheckStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testdata.v1.util.CheckStatusResponse}
 */
proto.testdata.v1.util.CheckStatusResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testdata.v1.util.CheckStatusResponse;
  return proto.testdata.v1.util.CheckStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testdata.v1.util.CheckStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testdata.v1.util.CheckStatusResponse}
 */
proto.testdata.v1.util.CheckStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.testdata.v1.util.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testdata.v1.util.CheckStatusResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testdata.v1.util.CheckStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testdata.v1.util.CheckStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testdata.v1.util.CheckStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Status Status = 1;
 * @return {!proto.testdata.v1.util.Status}
 */
proto.testdata.v1.util.CheckStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.testdata.v1.util.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.testdata.v1.util.Status} value */
proto.testdata.v1.util.CheckStatusResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.testdata.v1.util.UtilTestRequest.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.testdata.v1.util.UtilTestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.testdata.v1.util.UtilTestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testdata.v1.util.UtilTestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    intsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    structsList: jspb.Message.toObjectList(msg.getStructsList(),
    testdata_tld_util_imported_all_pb.Message.toObject, includeInstance),
    bool: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    int32: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    mapsimpleMap: (f = msg.getMapsimpleMap()) ? f.toObject(includeInstance, undefined) : [],
    mapcomplexMap: (f = msg.getMapcomplexMap()) ? f.toObject(includeInstance, proto.testdata.v1.util.CheckStatusResponse.toObject) : [],
    bytes: msg.getBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.testdata.v1.util.UtilTestRequest}
 */
proto.testdata.v1.util.UtilTestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.testdata.v1.util.UtilTestRequest;
  return proto.testdata.v1.util.UtilTestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.testdata.v1.util.UtilTestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.testdata.v1.util.UtilTestRequest}
 */
proto.testdata.v1.util.UtilTestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setIntsList(value);
      break;
    case 2:
      var value = new testdata_tld_util_imported_all_pb.Message;
      reader.readMessage(value,testdata_tld_util_imported_all_pb.Message.deserializeBinaryFromReader);
      msg.addStructs(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBool(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInt32(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 6:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 7:
      var value = msg.getMapsimpleMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "");
         });
      break;
    case 8:
      var value = msg.getMapcomplexMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readMessage, proto.testdata.v1.util.CheckStatusResponse.deserializeBinaryFromReader, 0);
         });
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.testdata.v1.util.UtilTestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.testdata.v1.util.UtilTestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.testdata.v1.util.UtilTestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIntsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getStructsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      testdata_tld_util_imported_all_pb.Message.serializeBinaryToWriter
    );
  }
  f = message.getBool();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getInt32();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMapsimpleMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
  f = message.getMapcomplexMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeMessage, proto.testdata.v1.util.CheckStatusResponse.serializeBinaryToWriter);
  }
  f = message.getBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
};


/**
 * repeated int32 Ints = 1;
 * @return {!Array<number>}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getIntsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<number>} value */
proto.testdata.v1.util.UtilTestRequest.prototype.setIntsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.testdata.v1.util.UtilTestRequest.prototype.addInts = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.testdata.v1.util.UtilTestRequest.prototype.clearIntsList = function() {
  this.setIntsList([]);
};


/**
 * repeated imported.Message Structs = 2;
 * @return {!Array<!proto.testdata.v1.util.imported.Message>}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getStructsList = function() {
  return /** @type{!Array<!proto.testdata.v1.util.imported.Message>} */ (
    jspb.Message.getRepeatedWrapperField(this, testdata_tld_util_imported_all_pb.Message, 2));
};


/** @param {!Array<!proto.testdata.v1.util.imported.Message>} value */
proto.testdata.v1.util.UtilTestRequest.prototype.setStructsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.testdata.v1.util.imported.Message=} opt_value
 * @param {number=} opt_index
 * @return {!proto.testdata.v1.util.imported.Message}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.addStructs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.testdata.v1.util.imported.Message, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.testdata.v1.util.UtilTestRequest.prototype.clearStructsList = function() {
  this.setStructsList([]);
};


/**
 * optional bool Bool = 3;
 * @return {boolean}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getBool = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.testdata.v1.util.UtilTestRequest.prototype.setBool = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int32 Int32 = 4;
 * @return {number}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getInt32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.testdata.v1.util.UtilTestRequest.prototype.setInt32 = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp Timestamp = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.testdata.v1.util.UtilTestRequest.prototype.setTimestamp = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.testdata.v1.util.UtilTestRequest.prototype.clearTimestamp = function() {
  this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Duration Duration = 6;
 * @return {?proto.google.protobuf.Duration}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 6));
};


/** @param {?proto.google.protobuf.Duration|undefined} value */
proto.testdata.v1.util.UtilTestRequest.prototype.setDuration = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.testdata.v1.util.UtilTestRequest.prototype.clearDuration = function() {
  this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * map<string, int32> MapSimple = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getMapsimpleMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.testdata.v1.util.UtilTestRequest.prototype.clearMapsimpleMap = function() {
  this.getMapsimpleMap().clear();
};


/**
 * map<int32, CheckStatusResponse> MapComplex = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.testdata.v1.util.CheckStatusResponse>}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getMapcomplexMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.testdata.v1.util.CheckStatusResponse>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      proto.testdata.v1.util.CheckStatusResponse));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.testdata.v1.util.UtilTestRequest.prototype.clearMapcomplexMap = function() {
  this.getMapcomplexMap().clear();
};


/**
 * optional bytes Bytes = 9;
 * @return {!(string|Uint8Array)}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes Bytes = 9;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes Bytes = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.testdata.v1.util.UtilTestRequest.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/** @param {!(string|Uint8Array)} value */
proto.testdata.v1.util.UtilTestRequest.prototype.setBytes = function(value) {
  jspb.Message.setProto3BytesField(this, 9, value);
};


/**
 * @enum {number}
 */
proto.testdata.v1.util.Status = {
  UNKNOWN: 0,
  ERROR: 1,
  OK: 2
};

goog.object.extend(exports, proto.testdata.v1.util);
