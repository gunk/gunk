// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: all.proto

package testdata.v1.util;

public final class All {
  private All() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * <pre>
   * Status is a server health status.
   * </pre>
   *
   * Protobuf enum {@code testdata.v1.util.Status}
   */
  public enum Status
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Status_Unknown is the default, unset status value.
     * </pre>
     *
     * <code>Unknown = 0 [deprecated = false];</code>
     */
    Unknown(0),
    /**
     * <pre>
     * Status_Error is a status value that implies something went wrong.
     * </pre>
     *
     * <code>Error = 1 [deprecated = false];</code>
     */
    Error(1),
    /**
     * <pre>
     * Status_OK is a status value used when all went well.
     * </pre>
     *
     * <code>OK = 2 [deprecated = false];</code>
     */
    OK(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Status_Unknown is the default, unset status value.
     * </pre>
     *
     * <code>Unknown = 0 [deprecated = false];</code>
     */
    public static final int Unknown_VALUE = 0;
    /**
     * <pre>
     * Status_Error is a status value that implies something went wrong.
     * </pre>
     *
     * <code>Error = 1 [deprecated = false];</code>
     */
    public static final int Error_VALUE = 1;
    /**
     * <pre>
     * Status_OK is a status value used when all went well.
     * </pre>
     *
     * <code>OK = 2 [deprecated = false];</code>
     */
    public static final int OK_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    public static Status forNumber(int value) {
      switch (value) {
        case 0: return Unknown;
        case 1: return Error;
        case 2: return OK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Status> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            @java.lang.Override
            public Status findValueByNumber(int number) {
              return Status.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return StatusVerifier.INSTANCE;
    }

    private static final class StatusVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new StatusVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Status.forNumber(number) != null;
            }
          };

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:testdata.v1.util.Status)
  }

  public interface CheckStatusResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:testdata.v1.util.CheckStatusResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    int getStatusValue();
    /**
     * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    testdata.v1.util.All.Status getStatus();
  }
  /**
   * <pre>
   * CheckStatusResponse is the response for a check status.
   * </pre>
   *
   * Protobuf type {@code testdata.v1.util.CheckStatusResponse}
   */
  public  static final class CheckStatusResponse extends
      com.google.protobuf.GeneratedMessageLite<
          CheckStatusResponse, CheckStatusResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:testdata.v1.util.CheckStatusResponse)
      CheckStatusResponseOrBuilder {
    private CheckStatusResponse() {
    }
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public testdata.v1.util.All.Status getStatus() {
      testdata.v1.util.All.Status result = testdata.v1.util.All.Status.forNumber(status_);
      return result == null ? testdata.v1.util.All.Status.UNRECOGNIZED : result;
    }
    /**
     * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setStatusValue(int value) {
        status_ = value;
    }
    /**
     * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setStatus(testdata.v1.util.All.Status value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      status_ = value.getNumber();
    }
    /**
     * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void clearStatus() {
      
      status_ = 0;
    }

    public static testdata.v1.util.All.CheckStatusResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static testdata.v1.util.All.CheckStatusResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(testdata.v1.util.All.CheckStatusResponse prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * CheckStatusResponse is the response for a check status.
     * </pre>
     *
     * Protobuf type {@code testdata.v1.util.CheckStatusResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          testdata.v1.util.All.CheckStatusResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:testdata.v1.util.CheckStatusResponse)
        testdata.v1.util.All.CheckStatusResponseOrBuilder {
      // Construct using testdata.v1.util.All.CheckStatusResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public int getStatusValue() {
        return instance.getStatusValue();
      }
      /**
       * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setStatusValue(int value) {
        copyOnWrite();
        instance.setStatusValue(value);
        return this;
      }
      /**
       * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public testdata.v1.util.All.Status getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setStatus(testdata.v1.util.All.Status value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>.testdata.v1.util.Status Status = 1[json_name = "status", ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:testdata.v1.util.CheckStatusResponse)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new testdata.v1.util.All.CheckStatusResponse();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "status_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\f";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<testdata.v1.util.All.CheckStatusResponse> parser = PARSER;
          if (parser == null) {
            synchronized (testdata.v1.util.All.CheckStatusResponse.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<testdata.v1.util.All.CheckStatusResponse>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:testdata.v1.util.CheckStatusResponse)
    private static final testdata.v1.util.All.CheckStatusResponse DEFAULT_INSTANCE;
    static {
      CheckStatusResponse defaultInstance = new CheckStatusResponse();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CheckStatusResponse.class, defaultInstance);
    }

    public static testdata.v1.util.All.CheckStatusResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CheckStatusResponse> PARSER;

    public static com.google.protobuf.Parser<CheckStatusResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface UtilTestRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:testdata.v1.util.UtilTestRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    java.util.List<java.lang.Integer> getIntsList();
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    int getIntsCount();
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    int getInts(int index);

    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    java.util.List<testdata.v1.util.imported.All.Message> 
        getStructsList();
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    testdata.v1.util.imported.All.Message getStructs(int index);
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    int getStructsCount();

    /**
     * <code>bool Bool = 3 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    boolean getBool();

    /**
     * <code>int32 Int32 = 4 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    int getInt32();

    /**
     * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    boolean hasTimestamp();
    /**
     * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    com.google.protobuf.Timestamp getTimestamp();

    /**
     * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    boolean hasDuration();
    /**
     * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    com.google.protobuf.Duration getDuration();

    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    int getMapSimpleCount();
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    boolean containsMapSimple(
        java.lang.String key);
    /**
     * Use {@link #getMapSimpleMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getMapSimple();
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getMapSimpleMap();
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */

    int getMapSimpleOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */

    int getMapSimpleOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    int getMapComplexCount();
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    boolean containsMapComplex(
        int key);
    /**
     * Use {@link #getMapComplexMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse>
    getMapComplex();
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse>
    getMapComplexMap();
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */

    testdata.v1.util.All.CheckStatusResponse getMapComplexOrDefault(
        int key,
        testdata.v1.util.All.CheckStatusResponse defaultValue);
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */

    testdata.v1.util.All.CheckStatusResponse getMapComplexOrThrow(
        int key);

    /**
     * <code>bytes Bytes = 9 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    com.google.protobuf.ByteString getBytes();
  }
  /**
   * Protobuf type {@code testdata.v1.util.UtilTestRequest}
   */
  public  static final class UtilTestRequest extends
      com.google.protobuf.GeneratedMessageLite<
          UtilTestRequest, UtilTestRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:testdata.v1.util.UtilTestRequest)
      UtilTestRequestOrBuilder {
    private UtilTestRequest() {
      ints_ = emptyIntList();
      structs_ = emptyProtobufList();
      bytes_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int INTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList ints_;
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getIntsList() {
      return ints_;
    }
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public int getIntsCount() {
      return ints_.size();
    }
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public int getInts(int index) {
      return ints_.getInt(index);
    }
    private int intsMemoizedSerializedSize = -1;
    private void ensureIntsIsMutable() {
      if (!ints_.isModifiable()) {
        ints_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(ints_);
       }
    }
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setInts(
        int index, int value) {
      ensureIntsIsMutable();
      ints_.setInt(index, value);
    }
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void addInts(int value) {
      ensureIntsIsMutable();
      ints_.addInt(value);
    }
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void addAllInts(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureIntsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, ints_);
    }
    /**
     * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void clearInts() {
      ints_ = emptyIntList();
    }

    public static final int STRUCTS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<testdata.v1.util.imported.All.Message> structs_;
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public java.util.List<testdata.v1.util.imported.All.Message> getStructsList() {
      return structs_;
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    public java.util.List<? extends testdata.v1.util.imported.All.MessageOrBuilder> 
        getStructsOrBuilderList() {
      return structs_;
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public int getStructsCount() {
      return structs_.size();
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public testdata.v1.util.imported.All.Message getStructs(int index) {
      return structs_.get(index);
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    public testdata.v1.util.imported.All.MessageOrBuilder getStructsOrBuilder(
        int index) {
      return structs_.get(index);
    }
    private void ensureStructsIsMutable() {
      if (!structs_.isModifiable()) {
        structs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(structs_);
       }
    }

    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setStructs(
        int index, testdata.v1.util.imported.All.Message value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStructsIsMutable();
      structs_.set(index, value);
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setStructs(
        int index, testdata.v1.util.imported.All.Message.Builder builderForValue) {
      ensureStructsIsMutable();
      structs_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void addStructs(testdata.v1.util.imported.All.Message value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStructsIsMutable();
      structs_.add(value);
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void addStructs(
        int index, testdata.v1.util.imported.All.Message value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureStructsIsMutable();
      structs_.add(index, value);
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void addStructs(
        testdata.v1.util.imported.All.Message.Builder builderForValue) {
      ensureStructsIsMutable();
      structs_.add(builderForValue.build());
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void addStructs(
        int index, testdata.v1.util.imported.All.Message.Builder builderForValue) {
      ensureStructsIsMutable();
      structs_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void addAllStructs(
        java.lang.Iterable<? extends testdata.v1.util.imported.All.Message> values) {
      ensureStructsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, structs_);
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void clearStructs() {
      structs_ = emptyProtobufList();
    }
    /**
     * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void removeStructs(int index) {
      ensureStructsIsMutable();
      structs_.remove(index);
    }

    public static final int BOOL_FIELD_NUMBER = 3;
    private boolean bool_;
    /**
     * <code>bool Bool = 3 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public boolean getBool() {
      return bool_;
    }
    /**
     * <code>bool Bool = 3 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setBool(boolean value) {
      
      bool_ = value;
    }
    /**
     * <code>bool Bool = 3 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void clearBool() {
      
      bool_ = false;
    }

    public static final int INT32_FIELD_NUMBER = 4;
    private int int32_;
    /**
     * <code>int32 Int32 = 4 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public int getInt32() {
      return int32_;
    }
    /**
     * <code>int32 Int32 = 4 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setInt32(int value) {
      
      int32_ = value;
    }
    /**
     * <code>int32 Int32 = 4 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void clearInt32() {
      
      int32_ = 0;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 5;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return timestamp_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setTimestamp(com.google.protobuf.Timestamp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      timestamp_ = value;
      
      }
    /**
     * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setTimestamp(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      timestamp_ = builderForValue.build();
      
    }
    /**
     * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeTimestamp(com.google.protobuf.Timestamp value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (timestamp_ != null &&
          timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
        timestamp_ =
          com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
      } else {
        timestamp_ = value;
      }
      
    }
    /**
     * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void clearTimestamp() {  timestamp_ = null;
      
    }

    public static final int DURATION_FIELD_NUMBER = 6;
    private com.google.protobuf.Duration duration_;
    /**
     * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public boolean hasDuration() {
      return duration_ != null;
    }
    /**
     * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public com.google.protobuf.Duration getDuration() {
      return duration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : duration_;
    }
    /**
     * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setDuration(com.google.protobuf.Duration value) {
      if (value == null) {
        throw new NullPointerException();
      }
      duration_ = value;
      
      }
    /**
     * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setDuration(
        com.google.protobuf.Duration.Builder builderForValue) {
      duration_ = builderForValue.build();
      
    }
    /**
     * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeDuration(com.google.protobuf.Duration value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (duration_ != null &&
          duration_ != com.google.protobuf.Duration.getDefaultInstance()) {
        duration_ =
          com.google.protobuf.Duration.newBuilder(duration_).mergeFrom(value).buildPartial();
      } else {
        duration_ = value;
      }
      
    }
    /**
     * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void clearDuration() {  duration_ = null;
      
    }

    public static final int MAPSIMPLE_FIELD_NUMBER = 7;
    private static final class MapSimpleDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.String, java.lang.Integer> mapSimple_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
    internalGetMapSimple() {
      return mapSimple_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.Integer>
    internalGetMutableMapSimple() {
      if (!mapSimple_.isMutable()) {
        mapSimple_ = mapSimple_.mutableCopy();
      }
      return mapSimple_;
    }
    @java.lang.Override

    public int getMapSimpleCount() {
      return internalGetMapSimple().size();
    }
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public boolean containsMapSimple(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMapSimple().containsKey(key);
    }
    /**
     * Use {@link #getMapSimpleMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getMapSimple() {
      return getMapSimpleMap();
    }
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Integer> getMapSimpleMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetMapSimple());
    }
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public int getMapSimpleOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetMapSimple();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public int getMapSimpleOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetMapSimple();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private java.util.Map<java.lang.String, java.lang.Integer>
    getMutableMapSimpleMap() {
      return internalGetMutableMapSimple();
    }

    public static final int MAPCOMPLEX_FIELD_NUMBER = 8;
    private static final class MapComplexDefaultEntryHolder {
      static final com.google.protobuf.MapEntryLite<
          java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> defaultEntry =
              com.google.protobuf.MapEntryLite
              .<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse>newDefaultInstance(
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  testdata.v1.util.All.CheckStatusResponse.getDefaultInstance());
    }
    private com.google.protobuf.MapFieldLite<
        java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> mapComplex_ =
            com.google.protobuf.MapFieldLite.emptyMapField();
    private com.google.protobuf.MapFieldLite<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse>
    internalGetMapComplex() {
      return mapComplex_;
    }
    private com.google.protobuf.MapFieldLite<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse>
    internalGetMutableMapComplex() {
      if (!mapComplex_.isMutable()) {
        mapComplex_ = mapComplex_.mutableCopy();
      }
      return mapComplex_;
    }
    @java.lang.Override

    public int getMapComplexCount() {
      return internalGetMapComplex().size();
    }
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public boolean containsMapComplex(
        int key) {
      
      return internalGetMapComplex().containsKey(key);
    }
    /**
     * Use {@link #getMapComplexMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> getMapComplex() {
      return getMapComplexMap();
    }
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> getMapComplexMap() {
      return java.util.Collections.unmodifiableMap(
          internalGetMapComplex());
    }
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public testdata.v1.util.All.CheckStatusResponse getMapComplexOrDefault(
        int key,
        testdata.v1.util.All.CheckStatusResponse defaultValue) {
      
      java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> map =
          internalGetMapComplex();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override

    public testdata.v1.util.All.CheckStatusResponse getMapComplexOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> map =
          internalGetMapComplex();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse>
    getMutableMapComplexMap() {
      return internalGetMutableMapComplex();
    }

    public static final int BYTES_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString bytes_;
    /**
     * <code>bytes Bytes = 9 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytes() {
      return bytes_;
    }
    /**
     * <code>bytes Bytes = 9 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void setBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      bytes_ = value;
    }
    /**
     * <code>bytes Bytes = 9 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
     */
    private void clearBytes() {
      
      bytes_ = getDefaultInstance().getBytes();
    }

    public static testdata.v1.util.All.UtilTestRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static testdata.v1.util.All.UtilTestRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static testdata.v1.util.All.UtilTestRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static testdata.v1.util.All.UtilTestRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(testdata.v1.util.All.UtilTestRequest prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code testdata.v1.util.UtilTestRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          testdata.v1.util.All.UtilTestRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:testdata.v1.util.UtilTestRequest)
        testdata.v1.util.All.UtilTestRequestOrBuilder {
      // Construct using testdata.v1.util.All.UtilTestRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getIntsList() {
        return java.util.Collections.unmodifiableList(
            instance.getIntsList());
      }
      /**
       * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public int getIntsCount() {
        return instance.getIntsCount();
      }
      /**
       * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public int getInts(int index) {
        return instance.getInts(index);
      }
      /**
       * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setInts(
          int index, int value) {
        copyOnWrite();
        instance.setInts(index, value);
        return this;
      }
      /**
       * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder addInts(int value) {
        copyOnWrite();
        instance.addInts(value);
        return this;
      }
      /**
       * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder addAllInts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllInts(values);
        return this;
      }
      /**
       * <code>repeated int32 Ints = 1 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder clearInts() {
        copyOnWrite();
        instance.clearInts();
        return this;
      }

      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public java.util.List<testdata.v1.util.imported.All.Message> getStructsList() {
        return java.util.Collections.unmodifiableList(
            instance.getStructsList());
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public int getStructsCount() {
        return instance.getStructsCount();
      }/**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public testdata.v1.util.imported.All.Message getStructs(int index) {
        return instance.getStructs(index);
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setStructs(
          int index, testdata.v1.util.imported.All.Message value) {
        copyOnWrite();
        instance.setStructs(index, value);
        return this;
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setStructs(
          int index, testdata.v1.util.imported.All.Message.Builder builderForValue) {
        copyOnWrite();
        instance.setStructs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder addStructs(testdata.v1.util.imported.All.Message value) {
        copyOnWrite();
        instance.addStructs(value);
        return this;
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder addStructs(
          int index, testdata.v1.util.imported.All.Message value) {
        copyOnWrite();
        instance.addStructs(index, value);
        return this;
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder addStructs(
          testdata.v1.util.imported.All.Message.Builder builderForValue) {
        copyOnWrite();
        instance.addStructs(builderForValue);
        return this;
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder addStructs(
          int index, testdata.v1.util.imported.All.Message.Builder builderForValue) {
        copyOnWrite();
        instance.addStructs(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder addAllStructs(
          java.lang.Iterable<? extends testdata.v1.util.imported.All.Message> values) {
        copyOnWrite();
        instance.addAllStructs(values);
        return this;
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder clearStructs() {
        copyOnWrite();
        instance.clearStructs();
        return this;
      }
      /**
       * <code>repeated .testdata.v1.util.imported.Message Structs = 2 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder removeStructs(int index) {
        copyOnWrite();
        instance.removeStructs(index);
        return this;
      }

      /**
       * <code>bool Bool = 3 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public boolean getBool() {
        return instance.getBool();
      }
      /**
       * <code>bool Bool = 3 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setBool(boolean value) {
        copyOnWrite();
        instance.setBool(value);
        return this;
      }
      /**
       * <code>bool Bool = 3 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder clearBool() {
        copyOnWrite();
        instance.clearBool();
        return this;
      }

      /**
       * <code>int32 Int32 = 4 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public int getInt32() {
        return instance.getInt32();
      }
      /**
       * <code>int32 Int32 = 4 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setInt32(int value) {
        copyOnWrite();
        instance.setInt32(value);
        return this;
      }
      /**
       * <code>int32 Int32 = 4 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder clearInt32() {
        copyOnWrite();
        instance.clearInt32();
        return this;
      }

      /**
       * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return instance.hasTimestamp();
      }
      /**
       * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public com.google.protobuf.Timestamp getTimestamp() {
        return instance.getTimestamp();
      }
      /**
       * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        copyOnWrite();
        instance.setTimestamp(value);
        return this;
        }
      /**
       * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        copyOnWrite();
        instance.setTimestamp(builderForValue);
        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        copyOnWrite();
        instance.mergeTimestamp(value);
        return this;
      }
      /**
       * <code>.google.protobuf.Timestamp Timestamp = 5 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder clearTimestamp() {  copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      /**
       * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public boolean hasDuration() {
        return instance.hasDuration();
      }
      /**
       * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public com.google.protobuf.Duration getDuration() {
        return instance.getDuration();
      }
      /**
       * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setDuration(com.google.protobuf.Duration value) {
        copyOnWrite();
        instance.setDuration(value);
        return this;
        }
      /**
       * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setDuration(
          com.google.protobuf.Duration.Builder builderForValue) {
        copyOnWrite();
        instance.setDuration(builderForValue);
        return this;
      }
      /**
       * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder mergeDuration(com.google.protobuf.Duration value) {
        copyOnWrite();
        instance.mergeDuration(value);
        return this;
      }
      /**
       * <code>.google.protobuf.Duration Duration = 6 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder clearDuration() {  copyOnWrite();
        instance.clearDuration();
        return this;
      }

      @java.lang.Override

      public int getMapSimpleCount() {
        return instance.getMapSimpleMap().size();
      }
      /**
       * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override

      public boolean containsMapSimple(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return instance.getMapSimpleMap().containsKey(key);
      }

      public Builder clearMapSimple() {
        copyOnWrite();
        instance.getMutableMapSimpleMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */

      public Builder removeMapSimple(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableMapSimpleMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getMapSimpleMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getMapSimple() {
        return getMapSimpleMap();
      }
      /**
       * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Integer> getMapSimpleMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getMapSimpleMap());
      }
      /**
       * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override

      public int getMapSimpleOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            instance.getMapSimpleMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override

      public int getMapSimpleOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            instance.getMapSimpleMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder putMapSimple(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        copyOnWrite();
        instance.getMutableMapSimpleMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, int32&gt; MapSimple = 7 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder putAllMapSimple(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        copyOnWrite();
        instance.getMutableMapSimpleMap().putAll(values);
        return this;
      }

      @java.lang.Override

      public int getMapComplexCount() {
        return instance.getMapComplexMap().size();
      }
      /**
       * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override

      public boolean containsMapComplex(
          int key) {
        
        return instance.getMapComplexMap().containsKey(key);
      }

      public Builder clearMapComplex() {
        copyOnWrite();
        instance.getMutableMapComplexMap().clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */

      public Builder removeMapComplex(
          int key) {
        
        copyOnWrite();
        instance.getMutableMapComplexMap().remove(key);
        return this;
      }
      /**
       * Use {@link #getMapComplexMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> getMapComplex() {
        return getMapComplexMap();
      }
      /**
       * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> getMapComplexMap() {
        return java.util.Collections.unmodifiableMap(
            instance.getMapComplexMap());
      }
      /**
       * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override

      public testdata.v1.util.All.CheckStatusResponse getMapComplexOrDefault(
          int key,
          testdata.v1.util.All.CheckStatusResponse defaultValue) {
        
        java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> map =
            instance.getMapComplexMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override

      public testdata.v1.util.All.CheckStatusResponse getMapComplexOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> map =
            instance.getMapComplexMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      /**
       * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder putMapComplex(
          int key,
          testdata.v1.util.All.CheckStatusResponse value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        copyOnWrite();
        instance.getMutableMapComplexMap().put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .testdata.v1.util.CheckStatusResponse&gt; MapComplex = 8 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder putAllMapComplex(
          java.util.Map<java.lang.Integer, testdata.v1.util.All.CheckStatusResponse> values) {
        copyOnWrite();
        instance.getMutableMapComplexMap().putAll(values);
        return this;
      }

      /**
       * <code>bytes Bytes = 9 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBytes() {
        return instance.getBytes();
      }
      /**
       * <code>bytes Bytes = 9 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder setBytes(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setBytes(value);
        return this;
      }
      /**
       * <code>bytes Bytes = 9 [ctype = STRING, deprecated = false, lazy = false, jstype = JS_NORMAL, weak = false];</code>
       */
      public Builder clearBytes() {
        copyOnWrite();
        instance.clearBytes();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:testdata.v1.util.UtilTestRequest)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new testdata.v1.util.All.UtilTestRequest();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "ints_",
              "structs_",
              testdata.v1.util.imported.All.Message.class,
              "bool_",
              "int32_",
              "timestamp_",
              "duration_",
              "mapSimple_",
              MapSimpleDefaultEntryHolder.defaultEntry,
              "mapComplex_",
              MapComplexDefaultEntryHolder.defaultEntry,
              "bytes_",
            };
            java.lang.String info =
                "\u0000\t\u0000\u0000\u0001\t\t\u0002\u0002\u0000\u0001\'\u0002\u001b\u0003\u0007" +
                "\u0004\u0004\u0005\t\u0006\t\u00072\b2\t\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<testdata.v1.util.All.UtilTestRequest> parser = PARSER;
          if (parser == null) {
            synchronized (testdata.v1.util.All.UtilTestRequest.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<testdata.v1.util.All.UtilTestRequest>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:testdata.v1.util.UtilTestRequest)
    private static final testdata.v1.util.All.UtilTestRequest DEFAULT_INSTANCE;
    static {
      UtilTestRequest defaultInstance = new UtilTestRequest();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        UtilTestRequest.class, defaultInstance);
    }

    public static testdata.v1.util.All.UtilTestRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<UtilTestRequest> PARSER;

    public static com.google.protobuf.Parser<UtilTestRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
