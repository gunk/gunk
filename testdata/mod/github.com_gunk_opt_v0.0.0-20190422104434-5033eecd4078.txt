module github.com/gunk/opt@latest

-- .mod --
module github.com/gunk/opt
-- .info --
{"Version":"v0.0.0-20190422104434-5033eecd4078","Time":"2019-04-22T10:44:34Z"}
-- LICENSE --
The MIT License (MIT)

Copyright (c) 2018-2019 Brankas Pte Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-- README.md --
-- enum/doc.go --
package enum
-- enum/enum.gunk --
package enum

// AllowAlias is the allow_alias option.
type AllowAlias bool

// Deprecated is the deprecated option.
type Deprecated bool
-- enumvalues/doc.go --
package enumvalues
-- enumvalues/enumvalues.gunk --
package enumvalues

// Deprecated is the deprecated option.
type Deprecated bool
-- field/cc/cc.gunk --
package cc

type Type int

const (
    String Type = iota
    Cord
    StringPiece
)
-- field/cc/doc.go --
package cc
-- field/doc.go --
package field
-- field/field.gunk --
package field

// Packed is the packed option.
type Packed bool

// Lazy is the lazy option.
type Lazy bool

// Deprecated is the deprecated option.
type Deprecated bool
-- field/js/doc.go --
package js
-- field/js/js.gunk --
package js

type Type int

const (
    Normal Type = iota
    String
    Number
)
-- file/cc/cc.gunk --
package cc

// EnableArenas is the cc_enable_arenas option.
type EnableArenas bool

// GenericServices is the cc_generic_services option.
type GenericServices bool
-- file/cc/doc.go --
package cc

// make this directory a Go package
-- file/csharp/csharp.gunk --
package csharp

// Namespace is the csharp_namespace option.
type Namespace string
-- file/csharp/doc.go --
package csharp

// make this directory a Go package
-- file/doc.go --
package file

// make this directory a Go package
-- file/file.gunk --
package file

// Deprecated is the deprecated option.
type Deprecated bool

// OptimizeFor is the optimize_for option.
type OptimizeFor int

// Values for OptimizeFor enum.
const (
    Speed       OptimizeFor = 1 // default
    CodeSize    OptimizeFor = 2
    LiteRuntime OptimizeFor = 3
)
-- file/java/doc.go --
package java

// make this directory a Go package
-- file/java/java.gunk --
package java

// Package is the java_package option.
type Package string

// OuterClassname is the java_outer_classname option.
type OuterClassname string

// MultipleFiles is the java_multiple_files option.
type MultipleFiles bool

// StringCheckUtf8 is the java_string_check_utf8 option.
type StringCheckUtf8 bool

// GenericServices is the java_generic_services option.
type GenericServices bool
-- file/objc/doc.go --
package objc

// make this directory a Go package
-- file/objc/objc.gunk --
package objc

// ClassPrefix is the objc_class_prefix option.
type ClassPrefix string
-- file/php/doc.go --
package php

// make this directory a Go package
-- file/php/php.gunk --
package php

// ClassPrefix is the php_class_prefix option.
type ClassPrefix string

// Namespace is the php_namespace option.
type Namespace string

// MetadataNamespace is the php_metadata_namespace option.
type MetadataNamespace string

// GenericServices is the php_generic_services option.
type GenericServices bool
-- file/ruby/doc.go --
package ruby

// make this directory a Go package
-- file/ruby/ruby.gunk --
package ruby

// Package is the ruby_package option.
type Package string
-- file/swift/doc.go --
package swift

// make this directory a Go package
-- file/swift/swift.gunk --
package swift

// Prefix is the swift_prefix option.
type Prefix string
-- go.mod --
module github.com/gunk/opt
-- http/doc.go --
package http

// make this directory a Go package
-- http/http.gunk --
// Package http provides the http matching options for gunk.
package http

// Match is the http matching option.
type Match struct {
    Method string `pb:"1"`
    Path   string `pb:"2"`
    Body   string `pb:"3"`
}
-- message/doc.go --
package message
-- message/message.gunk --
package message

// MessageSetWireFormat is the message_set_wire_format option.
type MessageSetWireFormat bool

// NoStandardDecriptorAccessor is the no_standard_descriptor_accessor option.
type NoStandardDescriptorAccessor bool

// Deprecated is the deprecated option.
type Deprecated bool
-- method/doc.go --
package method
-- method/method.gunk --
package method

// Deprecated is the deprecated option.
type Deprecated bool

// IdempotencyLevel is the idempotency_level option.
type IdempotencyLevel int

// Values for IdempotencyLevel
const (
    Unknown IdempotencyLevel = iota
    NoSideEffects
    Idempotent
)
-- openapiv2/doc.go --
package openapiv2

// make this directory a Go package
-- openapiv2/openapiv2.gunk --
// Package openapiv2 provides the openapiv2 matching options for gunk.
package openapiv2

// Operation is the representation of OpenAPI V2 specification operation object
type Operation struct {
    Tags        []string            `pb:"1"`
    Description string              `pb:"2"`
    Summary     string              `pb:"3"`
    Security    map[string][]string `pb:"4"`
}

// Schema is a representation of OpenAPI v2 specification's Schema object.
// The Schema Object allows the definition of input and output data types
type Schema struct {
    JSONSchema JSONSchema        `pb:"1"`
    Example    map[string]string `pb:"2"`
}


// JSONSchema represents properties from JSON Schema taken, and as used, in
// the OpenAPI v2 spec.
type JSONSchema struct {
    Title            string   `pb:"1"`
    Description      string   `pb:"2"`
}

-- service/doc.go --
package service
-- service/service.gunk --
package service

// Deprecated is the deprecated option.
type Deprecated bool
