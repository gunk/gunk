module github.com/gunk/opt@v0.0.0-20190514110406-385321f21939

-- .mod --
module github.com/gunk/opt

go 1.12

require github.com/golang/protobuf v1.3.1
-- .info --
{"Version":"v0.0.0-20190514110406-385321f21939","Time":"2019-05-14T04:04:06-07:00"}
-- LICENSE --
The MIT License (MIT)

Copyright (c) 2018-2019 Brankas Pte Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-- README.md --
-- enum/doc.go --
package enum
-- enum/enum.gunk --
package enum

// AllowAlias is the allow_alias option.
type AllowAlias bool

// Deprecated is the deprecated option.
type Deprecated bool
-- enumvalues/doc.go --
package enumvalues
-- enumvalues/enumvalues.gunk --
package enumvalues

// Deprecated is the deprecated option.
type Deprecated bool
-- field/cc/cc.gunk --
package cc

type Type int

const (
    String Type = iota
    Cord
    StringPiece
)
-- field/cc/doc.go --
package cc
-- field/doc.go --
package field
-- field/field.gunk --
package field

// Packed is the packed option.
type Packed bool

// Lazy is the lazy option.
type Lazy bool

// Deprecated is the deprecated option.
type Deprecated bool
-- field/js/doc.go --
package js
-- field/js/js.gunk --
package js

type Type int

const (
    Normal Type = iota
    String
    Number
)
-- file/cc/cc.gunk --
package cc

// EnableArenas is the cc_enable_arenas option.
type EnableArenas bool

// GenericServices is the cc_generic_services option.
type GenericServices bool
-- file/cc/doc.go --
package cc

// make this directory a Go package
-- file/csharp/csharp.gunk --
package csharp

// Namespace is the csharp_namespace option.
type Namespace string
-- file/csharp/doc.go --
package csharp

// make this directory a Go package
-- file/doc.go --
package file

// make this directory a Go package
-- file/file.gunk --
package file

// Deprecated is the deprecated option.
type Deprecated bool

// OptimizeFor is the optimize_for option.
type OptimizeFor int

// Values for OptimizeFor enum.
const (
    Speed       OptimizeFor = 1 // default
    CodeSize    OptimizeFor = 2
    LiteRuntime OptimizeFor = 3
)
-- file/java/doc.go --
package java

// make this directory a Go package
-- file/java/java.gunk --
package java

// Package is the java_package option.
type Package string

// OuterClassname is the java_outer_classname option.
type OuterClassname string

// MultipleFiles is the java_multiple_files option.
type MultipleFiles bool

// StringCheckUtf8 is the java_string_check_utf8 option.
type StringCheckUtf8 bool

// GenericServices is the java_generic_services option.
type GenericServices bool
-- file/objc/doc.go --
package objc

// make this directory a Go package
-- file/objc/objc.gunk --
package objc

// ClassPrefix is the objc_class_prefix option.
type ClassPrefix string
-- file/php/doc.go --
package php

// make this directory a Go package
-- file/php/php.gunk --
package php

// ClassPrefix is the php_class_prefix option.
type ClassPrefix string

// Namespace is the php_namespace option.
type Namespace string

// MetadataNamespace is the php_metadata_namespace option.
type MetadataNamespace string

// GenericServices is the php_generic_services option.
type GenericServices bool
-- file/ruby/doc.go --
package ruby

// make this directory a Go package
-- file/ruby/ruby.gunk --
package ruby

// Package is the ruby_package option.
type Package string
-- file/swift/doc.go --
package swift

// make this directory a Go package
-- file/swift/swift.gunk --
package swift

// Prefix is the swift_prefix option.
type Prefix string
-- go.mod --
module github.com/gunk/opt

go 1.12

require github.com/golang/protobuf v1.3.1
-- go.sum --
github.com/golang/protobuf v1.3.1 h1:YF8+flBXS5eO826T4nzqPrxfhQThhXl0YzfuUPu4SBg=
github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-- http/doc.go --
package http

// make this directory a Go package
-- http/http.gunk --
// Package http provides the http matching options for gunk.
package http

// Match is the http matching option.
type Match struct {
    Method string `pb:"1"`
    Path   string `pb:"2"`
    Body   string `pb:"3"`
}
-- message/doc.go --
package message
-- message/message.gunk --
package message

// MessageSetWireFormat is the message_set_wire_format option.
type MessageSetWireFormat bool

// NoStandardDecriptorAccessor is the no_standard_descriptor_accessor option.
type NoStandardDescriptorAccessor bool

// Deprecated is the deprecated option.
type Deprecated bool
-- method/doc.go --
package method
-- method/method.gunk --
package method

// Deprecated is the deprecated option.
type Deprecated bool

// IdempotencyLevel is the idempotency_level option.
type IdempotencyLevel int

// Values for IdempotencyLevel
const (
    Unknown IdempotencyLevel = iota
    NoSideEffects
    Idempotent
)
-- openapiv2/openapiv2.gunk --
// Package openapiv2 provides the openapiv2 matching options for gunk.
package openapiv2

type SwaggerScheme int

const (
	SwaggerSchemeUNKNOWN SwaggerScheme = iota
	HTTP
	HTTPS
	WS
	WSS
)

// Swagger is a representation of OpenAPI v2 specification's Swagger object.
type Swagger struct {
	Swagger             string                `pb:"1" json:"swagger"`
	Info                Info                  `pb:"2" json:"info"`
	Host                string                `pb:"3" json:"host"`
	BasePath            string                `pb:"4" json:"base_path"`
	Schemes             []SwaggerScheme       `pb:"5" json:"schemes"`
	Consumes            []string              `pb:"6" json:"consumes"`
	Produces            []string              `pb:"7" json:"produces"`
	Responses           map[string]Response   `pb:"10" json:"responses"`
	SecurityDefinitions SecurityDefinitions   `pb:"11" json:"security_definitions"`
	Security            []SecurityRequirement `pb:"12" json:"security"`
	ExternalDocs        ExternalDocumentation `pb:"14" json:"external_docs"`
}

// SecurityDefinitions is a representation of OpenAPI v2 specification's
// Security Definitions object.
type SecurityDefinitions struct {
	// A single security scheme definition, mapping a "name" to the scheme it defines.
	Security map[string]SecurityScheme `pb:"1" json:"security"`
}

// Type of the security scheme. Valid values are "basic",
// "apiKey" or "oauth2". Required
type Type int

const (
	TYPE_INVALID Type = iota
	TYPE_BASIC
	TYPE_API_KEY
	TYPE_OAUTH2
)

// In is the location of the API key. Valid values are "query" or "header". Required.
type In int

const (
	IN_INVALID In = iota
	IN_QUERY
	IN_HEADER
)

// Flow used by the OAuth2 security scheme. Valid values are
// "implicit", "password", "application" or "accessCode". Required.
type Flow int

const (
	FLOW_INVALID Flow = iota
	FLOW_IMPLICIT
	FLOW_PASSWORD
	FLOW_APPLICATION
	FLOW_ACCESS_CODE
)

// SecurityScheme is a representation of OpenAPI v2 specification's
// Security Scheme object.
type SecurityScheme struct {
	// Required. The type of the security scheme. Valid values are "basic",
	// "apiKey" or "oauth2".
	Type Type `pb:"1" json:"type"`
	// A short description for security scheme.
	Description string `pb:"2" json:"description"`
	// Required. The name of the header or query parameter to be used.
	// Valid for apiKey.
	Name string `pb:"3" json:"name"`
	// Required. The location of the API key. Valid values are "query" or "header".
	// Valid for apiKey.
	In In `pb:"4" json:"in"`
	// Required. The flow used by the OAuth2 security scheme. Valid values are
	// "implicit", "password", "application" or "accessCode".
	// Valid for oauth2.
	Flow Flow `pb:"5" json:"flow"`
	// Required. The authorization URL to be used for this flow. This SHOULD be in
	// the form of a URL.
	// Valid for oauth2/implicit and oauth2/accessCode.
	AuthorizationURL string `pb:"6" json:"authorization_url"`
	// Required. The token URL to be used for this flow. This SHOULD be in the
	// form of a URL.
	//
	// Valid for oauth2/password, oauth2/application and oauth2/accessCode.
	TokenURL string `pb:"7" json:"token_url"`
	// Required. The available scopes for the OAuth2 security scheme.
	// Valid for oauth2.
	Scopes Scopes `pb:"8" json:"scopes"`
}

// Scopes is a representation of OpenAPI v2 specification's Scopes object.
type Scopes struct {
	// Maps between a name of a scope to a short description of it (as the value
	// of the property).
	Scope map[string]string `pb:"1" json:"scope"`
}

// Operation is the representation of OpenAPI V2 specification operation object
type Operation struct {
	Tags         []string              `pb:"1" json:"tags"`
	Summary      string                `pb:"2" json:"summary"`
	Description  string                `pb:"3" json:"description"`
	ExternalDocs ExternalDocumentation `pb:"4" json:"external_docs"`
	OperationID  string                `pb:"5" json:"operation_id"`
	Consumes     []string              `pb:"6" json:"consumes"`
	Produces     []string              `pb:"7" json:"produces"`
	Responses    map[string]Response   `pb:"9" json:"responses"`
	Schemes      []string              `pb:"10" json:"schemes"`
	Deprecated   bool                  `pb:"11" json:"deprecated"`
	Security     []SecurityRequirement `pb:"12" json:"security"`
}

// ExternalDocumentation is a representation of OpenAPI v2 specification's
// ExternalDocumentation object.
type ExternalDocumentation struct {
	Description string `pb:"1" json:"description"`
	URL         string `pb:"2" json:"url"`
}

// Response is a representation of OpenAPI v2 specification's Response object.
type Response struct {
	// `Description` is a short description of the response.
	// GFM syntax can be used for rich text representation.
	Description string `pb:"1" json:"description"`
	// `Schema` optionally defines the structure of the response.
	// If `Schema` is not provided, it means there is no content to the response.
	Schema Schema `pb:"2" json:"schema"`
}

// Info is a representation of OpenAPI v2 specification's Info object.
type Info struct {
	Title          string  `pb:"1" json:"title"`
	Description    string  `pb:"2" json:"description"`
	TermsOfService string  `pb:"3" json:"terms_of_service"`
	Contact        Contact `pb:"4" json:"contact"`
	License        License `pb:"5" json:"license"`
	Version        string  `pb:"6" json:"version"`
}

// Contact is a representation of OpenAPI v2 specification's Contact object.
type Contact struct {
	Name  string `pb:"1" json:"name"`
	URL   string `pb:"2" json:"url"`
	Email string `pb:"3" json:"email"`
}

// License is a representation of OpenAPI v2 specification's License object.
type License struct {
	// Required. The license name used for the API.
	Name string `pb:"1" json:"name"`
	// A URL to the license used for the API.
	URL string `pb:"2" json:"url"`
}

// Schema is a representation of OpenAPI v2 specification's Schema object.
// The Schema Object allows the definition of input and output data types
type Schema struct {
	JSONSchema    JSONSchema            `pb:"1" json:"json_schema"`
	Discriminator string                `pb:"2" json:"discriminator"`
	ReadOnly      bool                  `pb:"3" json:"read_only"`
	ExternalDocs  ExternalDocumentation `pb:"5" json:"external_docs"`
	Example       Any                   `pb:"6" json:"example"`
}

type JSONSchemaSimpleTypes int

const (
	UNKNOWN JSONSchemaSimpleTypes = iota
	ARRAY
	BOOLEAN
	INTEGER
	NULL
	NUMBER
	OBJECT
	STRING
)

// JSONSchema represents properties from JSON Schema taken, and as used, in
// the OpenAPI v2 spec.
type JSONSchema struct {
	// field 1 is reserved for '$id', omitted from OpenAPI v2.
	// field 2 is reserved for '$schema', omitted from OpenAPI v2.
	// Ref is used to define an external reference to include in the message.
	// This could be a fully qualified proto message reference, and that type must be imported
	// into the protofile. If no message is identified, the Ref will be used verbatim in
	// the output.
	// For example:
	//  `ref: ".google.protobuf.Timestamp"`.
	Ref string `pb:"3" json:"ref"`
	// field 4 is reserved for '$comment', omitted from OpenAPI v2.
	Title       string `pb:"5" json:"title"`
	Description string `pb:"6" json:"description"`
	Default     string `pb:"7" json:"default"`
	ReadOnly    bool   `pb:"8" json:"read_only"`
	// field 9 is reserved for 'examples', which is omitted from OpenAPI v2 in favor of 'example' field.
	MultipleOf       float64 `pb:"10" json:"multiple_of"`
	Maximum          float64 `pb:"11" json:"maximum"`
	ExclusiveMaximum bool    `pb:"12" json:"exclusive_maximum"`
	Minimum          float64 `pb:"13" json:"minimum"`
	ExclusiveMinimum bool    `pb:"14" json:"exclusive_minimum"`
	MaxLength        uint64  `pb:"15" json:"max_length"`
	MinLength        uint64  `pb:"16" json:"min_length"`
	Pattern          string  `pb:"17" json:"pattern"`
	// field 18 is reserved for 'additionalItems', omitted from OpenAPI v2.
	// field 19 is reserved for 'items', but in OpenAPI-specific way. TODO(ivucica): add 'items'?
	MaxItems    uint64 `pb:"20" json:"max_items"`
	MinItems    uint64 `pb:"21" json:"min_items"`
	UniqueItems bool   `pb:"22" json:"unique_items"`
	// field 23 is reserved for 'contains', omitted from OpenAPI v2.
	MaxProperties uint64   `pb:"24" json:"max_properties"`
	MinProperties uint64   `pb:"25" json:"min_properties"`
	Required      []string `pb:"26" json:"required"`
	// field 27 is reserved for 'additionalProperties', but in OpenAPI-specific way. TODO(ivucica): add 'additionalProperties'?
	// field 28 is reserved for 'definitions', omitted from OpenAPI v2.
	// field 29 is reserved for 'properties', but in OpenAPI-specific way. TODO(ivucica): add 'additionalProperties'?
	// 30 to 33 are reserved, as the properties have been omitted from OpenAPI v2:
	// patternProperties, dependencies, propertyNames, const
	// Items in 'array' must be unique.
	Array []string                `pb:"34" json:"array"`
	Type  []JSONSchemaSimpleTypes `pb:"35" json:"type"`
	// 36 to 41 are reserved, as the properties have been omitted from OpenAPI v2:
	// format, contentMediaType, contentEncoding, if, then, else
	// field 42 is reserved for 'allOf', but in OpenAPI-specific way. TODO(ivucica): add 'allOf'?
	// 43 to 45 are reserved, as the properties have been omitted from OpenAPI v2:
	// anyOf, oneOf, not
}

// Any contains an arbitrary serialized protocol buffer message along with a
// URL that describes the type of the serialized message.
type Any struct {
	TypeURL string `pb:"1" json:"type_url"`
	// Must be a valid serialized protocol buffer of the above specified type.
	Value []byte `pb:"2" json:"value"`
}

// SecurityRequirement_SecurityRequirementValue holds a list of scopes.
// If the security scheme is of type "oauth2", then the value is a list of
// scope names required for the execution. For other security scheme types,
// the array MUST be empty.
type SecurityRequirement_SecurityRequirementValue struct {
	Scope []string `pb:"1" json:"scope"`
}

// SecurityRequirement is a representation of OpenAPI v2 specification's
// Security Requirement object.
type SecurityRequirement struct {
	// Each name must correspond to a security scheme which is declared in
	// the Security Definitions. If the security scheme is of type "oauth2",
	// then the value is a list of scope names required for the execution.
	// For other security scheme types, the array MUST be empty.
	SecurityRequirement map[string]SecurityRequirement_SecurityRequirementValue `pb:"1" json:"security_requirement"`
}
-- openapiv2/openapiv2.pb.go --
// Code generated by protoc-gen-go. DO NOT EDIT.
// source: command-line-arguments/all.proto

//Package openapiv2 provides the openapiv2 matching options for gunk.

package openapiv2

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SwaggerScheme int32

const (
	SwaggerScheme_SwaggerSchemeUNKNOWN SwaggerScheme = 0
	SwaggerScheme_HTTP                 SwaggerScheme = 1
	SwaggerScheme_HTTPS                SwaggerScheme = 2
	SwaggerScheme_WS                   SwaggerScheme = 3
	SwaggerScheme_WSS                  SwaggerScheme = 4
)

var SwaggerScheme_name = map[int32]string{
	0: "SwaggerSchemeUNKNOWN",
	1: "HTTP",
	2: "HTTPS",
	3: "WS",
	4: "WSS",
}

var SwaggerScheme_value = map[string]int32{
	"SwaggerSchemeUNKNOWN": 0,
	"HTTP":                 1,
	"HTTPS":                2,
	"WS":                   3,
	"WSS":                  4,
}

func (x SwaggerScheme) String() string {
	return proto.EnumName(SwaggerScheme_name, int32(x))
}

func (SwaggerScheme) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{0}
}

//Type of the security scheme. Valid values are "basic",
//"apiKey" or "oauth2". Required
type Type int32

const (
	Type_TYPE_INVALID Type = 0
	Type_TYPE_BASIC   Type = 1
	Type_TYPE_API_KEY Type = 2
	Type_TYPE_OAUTH2  Type = 3
)

var Type_name = map[int32]string{
	0: "TYPE_INVALID",
	1: "TYPE_BASIC",
	2: "TYPE_API_KEY",
	3: "TYPE_OAUTH2",
}

var Type_value = map[string]int32{
	"TYPE_INVALID": 0,
	"TYPE_BASIC":   1,
	"TYPE_API_KEY": 2,
	"TYPE_OAUTH2":  3,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{1}
}

//In is the location of the API key. Valid values are "query" or "header". Required.
type In int32

const (
	In_IN_INVALID In = 0
	In_IN_QUERY   In = 1
	In_IN_HEADER  In = 2
)

var In_name = map[int32]string{
	0: "IN_INVALID",
	1: "IN_QUERY",
	2: "IN_HEADER",
}

var In_value = map[string]int32{
	"IN_INVALID": 0,
	"IN_QUERY":   1,
	"IN_HEADER":  2,
}

func (x In) String() string {
	return proto.EnumName(In_name, int32(x))
}

func (In) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{2}
}

//Flow used by the OAuth2 security scheme. Valid values are
//"implicit", "password", "application" or "accessCode". Required.
type Flow int32

const (
	Flow_FLOW_INVALID     Flow = 0
	Flow_FLOW_IMPLICIT    Flow = 1
	Flow_FLOW_PASSWORD    Flow = 2
	Flow_FLOW_APPLICATION Flow = 3
	Flow_FLOW_ACCESS_CODE Flow = 4
)

var Flow_name = map[int32]string{
	0: "FLOW_INVALID",
	1: "FLOW_IMPLICIT",
	2: "FLOW_PASSWORD",
	3: "FLOW_APPLICATION",
	4: "FLOW_ACCESS_CODE",
}

var Flow_value = map[string]int32{
	"FLOW_INVALID":     0,
	"FLOW_IMPLICIT":    1,
	"FLOW_PASSWORD":    2,
	"FLOW_APPLICATION": 3,
	"FLOW_ACCESS_CODE": 4,
}

func (x Flow) String() string {
	return proto.EnumName(Flow_name, int32(x))
}

func (Flow) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{3}
}

type JSONSchemaSimpleTypes int32

const (
	JSONSchemaSimpleTypes_UNKNOWN JSONSchemaSimpleTypes = 0
	JSONSchemaSimpleTypes_ARRAY   JSONSchemaSimpleTypes = 1
	JSONSchemaSimpleTypes_BOOLEAN JSONSchemaSimpleTypes = 2
	JSONSchemaSimpleTypes_INTEGER JSONSchemaSimpleTypes = 3
	JSONSchemaSimpleTypes_NULL    JSONSchemaSimpleTypes = 4
	JSONSchemaSimpleTypes_NUMBER  JSONSchemaSimpleTypes = 5
	JSONSchemaSimpleTypes_OBJECT  JSONSchemaSimpleTypes = 6
	JSONSchemaSimpleTypes_STRING  JSONSchemaSimpleTypes = 7
)

var JSONSchemaSimpleTypes_name = map[int32]string{
	0: "UNKNOWN",
	1: "ARRAY",
	2: "BOOLEAN",
	3: "INTEGER",
	4: "NULL",
	5: "NUMBER",
	6: "OBJECT",
	7: "STRING",
}

var JSONSchemaSimpleTypes_value = map[string]int32{
	"UNKNOWN": 0,
	"ARRAY":   1,
	"BOOLEAN": 2,
	"INTEGER": 3,
	"NULL":    4,
	"NUMBER":  5,
	"OBJECT":  6,
	"STRING":  7,
}

func (x JSONSchemaSimpleTypes) String() string {
	return proto.EnumName(JSONSchemaSimpleTypes_name, int32(x))
}

func (JSONSchemaSimpleTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{4}
}

//Swagger is a representation of OpenAPI v2 specification's Swagger object.
type Swagger struct {
	Swagger              string                 `protobuf:"bytes,1,opt,name=Swagger,json=swagger,proto3" json:"Swagger,omitempty"`
	Info                 *Info                  `protobuf:"bytes,2,opt,name=Info,json=info,proto3" json:"Info,omitempty"`
	Host                 string                 `protobuf:"bytes,3,opt,name=Host,json=host,proto3" json:"Host,omitempty"`
	BasePath             string                 `protobuf:"bytes,4,opt,name=BasePath,json=base_path,proto3" json:"BasePath,omitempty"`
	Schemes              []SwaggerScheme        `protobuf:"varint,5,rep,packed,name=Schemes,json=schemes,proto3,enum=openapiv2.SwaggerScheme" json:"Schemes,omitempty"`
	Consumes             []string               `protobuf:"bytes,6,rep,name=Consumes,json=consumes,proto3" json:"Consumes,omitempty"`
	Produces             []string               `protobuf:"bytes,7,rep,name=Produces,json=produces,proto3" json:"Produces,omitempty"`
	Responses            map[string]*Response   `protobuf:"bytes,10,rep,name=Responses,json=responses,proto3" json:"Responses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SecurityDefinitions  *SecurityDefinitions   `protobuf:"bytes,11,opt,name=SecurityDefinitions,json=security_definitions,proto3" json:"SecurityDefinitions,omitempty"`
	Security             []*SecurityRequirement `protobuf:"bytes,12,rep,name=Security,json=security,proto3" json:"Security,omitempty"`
	ExternalDocs         *ExternalDocumentation `protobuf:"bytes,14,opt,name=ExternalDocs,json=external_docs,proto3" json:"ExternalDocs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Swagger) Reset()         { *m = Swagger{} }
func (m *Swagger) String() string { return proto.CompactTextString(m) }
func (*Swagger) ProtoMessage()    {}
func (*Swagger) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{0}
}

func (m *Swagger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Swagger.Unmarshal(m, b)
}
func (m *Swagger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Swagger.Marshal(b, m, deterministic)
}
func (m *Swagger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Swagger.Merge(m, src)
}
func (m *Swagger) XXX_Size() int {
	return xxx_messageInfo_Swagger.Size(m)
}
func (m *Swagger) XXX_DiscardUnknown() {
	xxx_messageInfo_Swagger.DiscardUnknown(m)
}

var xxx_messageInfo_Swagger proto.InternalMessageInfo

func (m *Swagger) GetSwagger() string {
	if m != nil {
		return m.Swagger
	}
	return ""
}

func (m *Swagger) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Swagger) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Swagger) GetBasePath() string {
	if m != nil {
		return m.BasePath
	}
	return ""
}

func (m *Swagger) GetSchemes() []SwaggerScheme {
	if m != nil {
		return m.Schemes
	}
	return nil
}

func (m *Swagger) GetConsumes() []string {
	if m != nil {
		return m.Consumes
	}
	return nil
}

func (m *Swagger) GetProduces() []string {
	if m != nil {
		return m.Produces
	}
	return nil
}

func (m *Swagger) GetResponses() map[string]*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Swagger) GetSecurityDefinitions() *SecurityDefinitions {
	if m != nil {
		return m.SecurityDefinitions
	}
	return nil
}

func (m *Swagger) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

func (m *Swagger) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

//SecurityDefinitions is a representation of OpenAPI v2 specification's
//Security Definitions object.
type SecurityDefinitions struct {
	//A single security scheme definition, mapping a "name" to the scheme it defines.
	Security             map[string]*SecurityScheme `protobuf:"bytes,1,rep,name=Security,json=security,proto3" json:"Security,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SecurityDefinitions) Reset()         { *m = SecurityDefinitions{} }
func (m *SecurityDefinitions) String() string { return proto.CompactTextString(m) }
func (*SecurityDefinitions) ProtoMessage()    {}
func (*SecurityDefinitions) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{1}
}

func (m *SecurityDefinitions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityDefinitions.Unmarshal(m, b)
}
func (m *SecurityDefinitions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityDefinitions.Marshal(b, m, deterministic)
}
func (m *SecurityDefinitions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityDefinitions.Merge(m, src)
}
func (m *SecurityDefinitions) XXX_Size() int {
	return xxx_messageInfo_SecurityDefinitions.Size(m)
}
func (m *SecurityDefinitions) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityDefinitions.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityDefinitions proto.InternalMessageInfo

func (m *SecurityDefinitions) GetSecurity() map[string]*SecurityScheme {
	if m != nil {
		return m.Security
	}
	return nil
}

//SecurityScheme is a representation of OpenAPI v2 specification's
//Security Scheme object.
type SecurityScheme struct {
	//Required. The type of the security scheme. Valid values are "basic",
	//"apiKey" or "oauth2".
	Type Type `protobuf:"varint,1,opt,name=Type,json=type,proto3,enum=openapiv2.Type" json:"Type,omitempty"`
	//A short description for security scheme.
	Description string `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	//Required. The name of the header or query parameter to be used.
	//Valid for apiKey.
	Name string `protobuf:"bytes,3,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	//Required. The location of the API key. Valid values are "query" or "header".
	//Valid for apiKey.
	In In `protobuf:"varint,4,opt,name=In,json=in,proto3,enum=openapiv2.In" json:"In,omitempty"`
	//Required. The flow used by the OAuth2 security scheme. Valid values are
	//"implicit", "password", "application" or "accessCode".
	//Valid for oauth2.
	Flow Flow `protobuf:"varint,5,opt,name=Flow,json=flow,proto3,enum=openapiv2.Flow" json:"Flow,omitempty"`
	//Required. The authorization URL to be used for this flow. This SHOULD be in
	//the form of a URL.
	//Valid for oauth2/implicit and oauth2/accessCode.
	AuthorizationURL string `protobuf:"bytes,6,opt,name=AuthorizationURL,json=authorization_url,proto3" json:"AuthorizationURL,omitempty"`
	//Required. The token URL to be used for this flow. This SHOULD be in the
	//form of a URL.
	//
	//Valid for oauth2/password, oauth2/application and oauth2/accessCode.
	TokenURL string `protobuf:"bytes,7,opt,name=TokenURL,json=token_url,proto3" json:"TokenURL,omitempty"`
	//Required. The available scopes for the OAuth2 security scheme.
	//Valid for oauth2.
	Scopes               *Scopes  `protobuf:"bytes,8,opt,name=Scopes,json=scopes,proto3" json:"Scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecurityScheme) Reset()         { *m = SecurityScheme{} }
func (m *SecurityScheme) String() string { return proto.CompactTextString(m) }
func (*SecurityScheme) ProtoMessage()    {}
func (*SecurityScheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{2}
}

func (m *SecurityScheme) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityScheme.Unmarshal(m, b)
}
func (m *SecurityScheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityScheme.Marshal(b, m, deterministic)
}
func (m *SecurityScheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityScheme.Merge(m, src)
}
func (m *SecurityScheme) XXX_Size() int {
	return xxx_messageInfo_SecurityScheme.Size(m)
}
func (m *SecurityScheme) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityScheme.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityScheme proto.InternalMessageInfo

func (m *SecurityScheme) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_TYPE_INVALID
}

func (m *SecurityScheme) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SecurityScheme) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SecurityScheme) GetIn() In {
	if m != nil {
		return m.In
	}
	return In_IN_INVALID
}

func (m *SecurityScheme) GetFlow() Flow {
	if m != nil {
		return m.Flow
	}
	return Flow_FLOW_INVALID
}

func (m *SecurityScheme) GetAuthorizationURL() string {
	if m != nil {
		return m.AuthorizationURL
	}
	return ""
}

func (m *SecurityScheme) GetTokenURL() string {
	if m != nil {
		return m.TokenURL
	}
	return ""
}

func (m *SecurityScheme) GetScopes() *Scopes {
	if m != nil {
		return m.Scopes
	}
	return nil
}

//Scopes is a representation of OpenAPI v2 specification's Scopes object.
type Scopes struct {
	//Maps between a name of a scope to a short description of it (as the value
	//of the property).
	Scope                map[string]string `protobuf:"bytes,1,rep,name=Scope,json=scope,proto3" json:"Scope,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Scopes) Reset()         { *m = Scopes{} }
func (m *Scopes) String() string { return proto.CompactTextString(m) }
func (*Scopes) ProtoMessage()    {}
func (*Scopes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{3}
}

func (m *Scopes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Scopes.Unmarshal(m, b)
}
func (m *Scopes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Scopes.Marshal(b, m, deterministic)
}
func (m *Scopes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scopes.Merge(m, src)
}
func (m *Scopes) XXX_Size() int {
	return xxx_messageInfo_Scopes.Size(m)
}
func (m *Scopes) XXX_DiscardUnknown() {
	xxx_messageInfo_Scopes.DiscardUnknown(m)
}

var xxx_messageInfo_Scopes proto.InternalMessageInfo

func (m *Scopes) GetScope() map[string]string {
	if m != nil {
		return m.Scope
	}
	return nil
}

//Operation is the representation of OpenAPI V2 specification operation object
type Operation struct {
	Tags                 []string               `protobuf:"bytes,1,rep,name=Tags,json=tags,proto3" json:"Tags,omitempty"`
	Summary              string                 `protobuf:"bytes,2,opt,name=Summary,json=summary,proto3" json:"Summary,omitempty"`
	Description          string                 `protobuf:"bytes,3,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	ExternalDocs         *ExternalDocumentation `protobuf:"bytes,4,opt,name=ExternalDocs,json=external_docs,proto3" json:"ExternalDocs,omitempty"`
	OperationID          string                 `protobuf:"bytes,5,opt,name=OperationID,json=operation_id,proto3" json:"OperationID,omitempty"`
	Consumes             []string               `protobuf:"bytes,6,rep,name=Consumes,json=consumes,proto3" json:"Consumes,omitempty"`
	Produces             []string               `protobuf:"bytes,7,rep,name=Produces,json=produces,proto3" json:"Produces,omitempty"`
	Responses            map[string]*Response   `protobuf:"bytes,9,rep,name=Responses,json=responses,proto3" json:"Responses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Schemes              []string               `protobuf:"bytes,10,rep,name=Schemes,json=schemes,proto3" json:"Schemes,omitempty"`
	Deprecated           bool                   `protobuf:"varint,11,opt,name=Deprecated,json=deprecated,proto3" json:"Deprecated,omitempty"`
	Security             []*SecurityRequirement `protobuf:"bytes,12,rep,name=Security,json=security,proto3" json:"Security,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{4}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Operation) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Operation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Operation) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Operation) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *Operation) GetConsumes() []string {
	if m != nil {
		return m.Consumes
	}
	return nil
}

func (m *Operation) GetProduces() []string {
	if m != nil {
		return m.Produces
	}
	return nil
}

func (m *Operation) GetResponses() map[string]*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

func (m *Operation) GetSchemes() []string {
	if m != nil {
		return m.Schemes
	}
	return nil
}

func (m *Operation) GetDeprecated() bool {
	if m != nil {
		return m.Deprecated
	}
	return false
}

func (m *Operation) GetSecurity() []*SecurityRequirement {
	if m != nil {
		return m.Security
	}
	return nil
}

//ExternalDocumentation is a representation of OpenAPI v2 specification's
//ExternalDocumentation object.
type ExternalDocumentation struct {
	Description          string   `protobuf:"bytes,1,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	URL                  string   `protobuf:"bytes,2,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalDocumentation) Reset()         { *m = ExternalDocumentation{} }
func (m *ExternalDocumentation) String() string { return proto.CompactTextString(m) }
func (*ExternalDocumentation) ProtoMessage()    {}
func (*ExternalDocumentation) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{5}
}

func (m *ExternalDocumentation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalDocumentation.Unmarshal(m, b)
}
func (m *ExternalDocumentation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalDocumentation.Marshal(b, m, deterministic)
}
func (m *ExternalDocumentation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalDocumentation.Merge(m, src)
}
func (m *ExternalDocumentation) XXX_Size() int {
	return xxx_messageInfo_ExternalDocumentation.Size(m)
}
func (m *ExternalDocumentation) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalDocumentation.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalDocumentation proto.InternalMessageInfo

func (m *ExternalDocumentation) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ExternalDocumentation) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

//Response is a representation of OpenAPI v2 specification's Response object.
type Response struct {
	//`Description` is a short description of the response.
	//GFM syntax can be used for rich text representation.
	Description string `protobuf:"bytes,1,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	//`Schema` optionally defines the structure of the response.
	//If `Schema` is not provided, it means there is no content to the response.
	Schema               *Schema  `protobuf:"bytes,2,opt,name=Schema,json=schema,proto3" json:"Schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{6}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Response) GetSchema() *Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

//Info is a representation of OpenAPI v2 specification's Info object.
type Info struct {
	Title                string   `protobuf:"bytes,1,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	TermsOfService       string   `protobuf:"bytes,3,opt,name=TermsOfService,json=terms_of_service,proto3" json:"TermsOfService,omitempty"`
	Contact              *Contact `protobuf:"bytes,4,opt,name=Contact,json=contact,proto3" json:"Contact,omitempty"`
	License              *License `protobuf:"bytes,5,opt,name=License,json=license,proto3" json:"License,omitempty"`
	Version              string   `protobuf:"bytes,6,opt,name=Version,json=version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{7}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func (m *Info) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Info) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Info) GetTermsOfService() string {
	if m != nil {
		return m.TermsOfService
	}
	return ""
}

func (m *Info) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func (m *Info) GetLicense() *License {
	if m != nil {
		return m.License
	}
	return nil
}

func (m *Info) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

//Contact is a representation of OpenAPI v2 specification's Contact object.
type Contact struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	URL                  string   `protobuf:"bytes,2,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=Email,json=email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{8}
}

func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

//License is a representation of OpenAPI v2 specification's License object.
type License struct {
	//Required. The license name used for the API.
	Name string `protobuf:"bytes,1,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	//A URL to the license used for the API.
	URL                  string   `protobuf:"bytes,2,opt,name=URL,json=url,proto3" json:"URL,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *License) Reset()         { *m = License{} }
func (m *License) String() string { return proto.CompactTextString(m) }
func (*License) ProtoMessage()    {}
func (*License) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{9}
}

func (m *License) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_License.Unmarshal(m, b)
}
func (m *License) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_License.Marshal(b, m, deterministic)
}
func (m *License) XXX_Merge(src proto.Message) {
	xxx_messageInfo_License.Merge(m, src)
}
func (m *License) XXX_Size() int {
	return xxx_messageInfo_License.Size(m)
}
func (m *License) XXX_DiscardUnknown() {
	xxx_messageInfo_License.DiscardUnknown(m)
}

var xxx_messageInfo_License proto.InternalMessageInfo

func (m *License) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *License) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

//Schema is a representation of OpenAPI v2 specification's Schema object.
//The Schema Object allows the definition of input and output data types
type Schema struct {
	JSONSchema           *JSONSchema            `protobuf:"bytes,1,opt,name=JSONSchema,json=json_schema,proto3" json:"JSONSchema,omitempty"`
	Discriminator        string                 `protobuf:"bytes,2,opt,name=Discriminator,json=discriminator,proto3" json:"Discriminator,omitempty"`
	ReadOnly             bool                   `protobuf:"varint,3,opt,name=ReadOnly,json=read_only,proto3" json:"ReadOnly,omitempty"`
	ExternalDocs         *ExternalDocumentation `protobuf:"bytes,5,opt,name=ExternalDocs,json=external_docs,proto3" json:"ExternalDocs,omitempty"`
	Example              *Any                   `protobuf:"bytes,6,opt,name=Example,json=example,proto3" json:"Example,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Schema) Reset()         { *m = Schema{} }
func (m *Schema) String() string { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()    {}
func (*Schema) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{10}
}

func (m *Schema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema.Unmarshal(m, b)
}
func (m *Schema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema.Marshal(b, m, deterministic)
}
func (m *Schema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema.Merge(m, src)
}
func (m *Schema) XXX_Size() int {
	return xxx_messageInfo_Schema.Size(m)
}
func (m *Schema) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema.DiscardUnknown(m)
}

var xxx_messageInfo_Schema proto.InternalMessageInfo

func (m *Schema) GetJSONSchema() *JSONSchema {
	if m != nil {
		return m.JSONSchema
	}
	return nil
}

func (m *Schema) GetDiscriminator() string {
	if m != nil {
		return m.Discriminator
	}
	return ""
}

func (m *Schema) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func (m *Schema) GetExternalDocs() *ExternalDocumentation {
	if m != nil {
		return m.ExternalDocs
	}
	return nil
}

func (m *Schema) GetExample() *Any {
	if m != nil {
		return m.Example
	}
	return nil
}

//JSONSchema represents properties from JSON Schema taken, and as used, in
//the OpenAPI v2 spec.
type JSONSchema struct {
	//field 1 is reserved for '$id', omitted from OpenAPI v2.
	//field 2 is reserved for '$schema', omitted from OpenAPI v2.
	//Ref is used to define an external reference to include in the message.
	//This could be a fully qualified proto message reference, and that type must be imported
	//into the protofile. If no message is identified, the Ref will be used verbatim in
	//the output.
	//For example:
	// `ref: ".google.protobuf.Timestamp"`.
	Ref string `protobuf:"bytes,3,opt,name=Ref,json=ref,proto3" json:"Ref,omitempty"`
	//field 4 is reserved for '$comment', omitted from OpenAPI v2.
	Title       string `protobuf:"bytes,5,opt,name=Title,json=title,proto3" json:"Title,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=Description,json=description,proto3" json:"Description,omitempty"`
	Default     string `protobuf:"bytes,7,opt,name=Default,json=default,proto3" json:"Default,omitempty"`
	ReadOnly    bool   `protobuf:"varint,8,opt,name=ReadOnly,json=read_only,proto3" json:"ReadOnly,omitempty"`
	//field 9 is reserved for 'examples', which is omitted from OpenAPI v2 in favor of 'example' field.
	MultipleOf       float64 `protobuf:"fixed64,10,opt,name=MultipleOf,json=multiple_of,proto3" json:"MultipleOf,omitempty"`
	Maximum          float64 `protobuf:"fixed64,11,opt,name=Maximum,json=maximum,proto3" json:"Maximum,omitempty"`
	ExclusiveMaximum bool    `protobuf:"varint,12,opt,name=ExclusiveMaximum,json=exclusive_maximum,proto3" json:"ExclusiveMaximum,omitempty"`
	Minimum          float64 `protobuf:"fixed64,13,opt,name=Minimum,json=minimum,proto3" json:"Minimum,omitempty"`
	ExclusiveMinimum bool    `protobuf:"varint,14,opt,name=ExclusiveMinimum,json=exclusive_minimum,proto3" json:"ExclusiveMinimum,omitempty"`
	MaxLength        uint64  `protobuf:"varint,15,opt,name=MaxLength,json=max_length,proto3" json:"MaxLength,omitempty"`
	MinLength        uint64  `protobuf:"varint,16,opt,name=MinLength,json=min_length,proto3" json:"MinLength,omitempty"`
	Pattern          string  `protobuf:"bytes,17,opt,name=Pattern,json=pattern,proto3" json:"Pattern,omitempty"`
	//field 18 is reserved for 'additionalItems', omitted from OpenAPI v2.
	//field 19 is reserved for 'items', but in OpenAPI-specific way. TODO(ivucica): add 'items'?
	MaxItems    uint64 `protobuf:"varint,20,opt,name=MaxItems,json=max_items,proto3" json:"MaxItems,omitempty"`
	MinItems    uint64 `protobuf:"varint,21,opt,name=MinItems,json=min_items,proto3" json:"MinItems,omitempty"`
	UniqueItems bool   `protobuf:"varint,22,opt,name=UniqueItems,json=unique_items,proto3" json:"UniqueItems,omitempty"`
	//field 23 is reserved for 'contains', omitted from OpenAPI v2.
	MaxProperties uint64   `protobuf:"varint,24,opt,name=MaxProperties,json=max_properties,proto3" json:"MaxProperties,omitempty"`
	MinProperties uint64   `protobuf:"varint,25,opt,name=MinProperties,json=min_properties,proto3" json:"MinProperties,omitempty"`
	Required      []string `protobuf:"bytes,26,rep,name=Required,json=required,proto3" json:"Required,omitempty"`
	//field 27 is reserved for 'additionalProperties', but in OpenAPI-specific way. TODO(ivucica): add 'additionalProperties'?
	//field 28 is reserved for 'definitions', omitted from OpenAPI v2.
	//field 29 is reserved for 'properties', but in OpenAPI-specific way. TODO(ivucica): add 'additionalProperties'?
	//30 to 33 are reserved, as the properties have been omitted from OpenAPI v2:
	//patternProperties, dependencies, propertyNames, const
	//Items in 'array' must be unique.
	Array                []string                `protobuf:"bytes,34,rep,name=Array,json=array,proto3" json:"Array,omitempty"`
	Type                 []JSONSchemaSimpleTypes `protobuf:"varint,35,rep,packed,name=Type,json=type,proto3,enum=openapiv2.JSONSchemaSimpleTypes" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *JSONSchema) Reset()         { *m = JSONSchema{} }
func (m *JSONSchema) String() string { return proto.CompactTextString(m) }
func (*JSONSchema) ProtoMessage()    {}
func (*JSONSchema) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{11}
}

func (m *JSONSchema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JSONSchema.Unmarshal(m, b)
}
func (m *JSONSchema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JSONSchema.Marshal(b, m, deterministic)
}
func (m *JSONSchema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JSONSchema.Merge(m, src)
}
func (m *JSONSchema) XXX_Size() int {
	return xxx_messageInfo_JSONSchema.Size(m)
}
func (m *JSONSchema) XXX_DiscardUnknown() {
	xxx_messageInfo_JSONSchema.DiscardUnknown(m)
}

var xxx_messageInfo_JSONSchema proto.InternalMessageInfo

func (m *JSONSchema) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *JSONSchema) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *JSONSchema) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *JSONSchema) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *JSONSchema) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

func (m *JSONSchema) GetMultipleOf() float64 {
	if m != nil {
		return m.MultipleOf
	}
	return 0
}

func (m *JSONSchema) GetMaximum() float64 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func (m *JSONSchema) GetExclusiveMaximum() bool {
	if m != nil {
		return m.ExclusiveMaximum
	}
	return false
}

func (m *JSONSchema) GetMinimum() float64 {
	if m != nil {
		return m.Minimum
	}
	return 0
}

func (m *JSONSchema) GetExclusiveMinimum() bool {
	if m != nil {
		return m.ExclusiveMinimum
	}
	return false
}

func (m *JSONSchema) GetMaxLength() uint64 {
	if m != nil {
		return m.MaxLength
	}
	return 0
}

func (m *JSONSchema) GetMinLength() uint64 {
	if m != nil {
		return m.MinLength
	}
	return 0
}

func (m *JSONSchema) GetPattern() string {
	if m != nil {
		return m.Pattern
	}
	return ""
}

func (m *JSONSchema) GetMaxItems() uint64 {
	if m != nil {
		return m.MaxItems
	}
	return 0
}

func (m *JSONSchema) GetMinItems() uint64 {
	if m != nil {
		return m.MinItems
	}
	return 0
}

func (m *JSONSchema) GetUniqueItems() bool {
	if m != nil {
		return m.UniqueItems
	}
	return false
}

func (m *JSONSchema) GetMaxProperties() uint64 {
	if m != nil {
		return m.MaxProperties
	}
	return 0
}

func (m *JSONSchema) GetMinProperties() uint64 {
	if m != nil {
		return m.MinProperties
	}
	return 0
}

func (m *JSONSchema) GetRequired() []string {
	if m != nil {
		return m.Required
	}
	return nil
}

func (m *JSONSchema) GetArray() []string {
	if m != nil {
		return m.Array
	}
	return nil
}

func (m *JSONSchema) GetType() []JSONSchemaSimpleTypes {
	if m != nil {
		return m.Type
	}
	return nil
}

//Any contains an arbitrary serialized protocol buffer message along with a
//URL that describes the type of the serialized message.
type Any struct {
	TypeURL string `protobuf:"bytes,1,opt,name=TypeURL,json=type_url,proto3" json:"TypeURL,omitempty"`
	//Must be a valid serialized protocol buffer of the above specified type.
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,json=value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Any) Reset()         { *m = Any{} }
func (m *Any) String() string { return proto.CompactTextString(m) }
func (*Any) ProtoMessage()    {}
func (*Any) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{12}
}

func (m *Any) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Any.Unmarshal(m, b)
}
func (m *Any) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Any.Marshal(b, m, deterministic)
}
func (m *Any) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Any.Merge(m, src)
}
func (m *Any) XXX_Size() int {
	return xxx_messageInfo_Any.Size(m)
}
func (m *Any) XXX_DiscardUnknown() {
	xxx_messageInfo_Any.DiscardUnknown(m)
}

var xxx_messageInfo_Any proto.InternalMessageInfo

func (m *Any) GetTypeURL() string {
	if m != nil {
		return m.TypeURL
	}
	return ""
}

func (m *Any) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

//SecurityRequirement_SecurityRequirementValue holds a list of scopes.
//If the security scheme is of type "oauth2", then the value is a list of
//scope names required for the execution. For other security scheme types,
//the array MUST be empty.
type SecurityRequirement_SecurityRequirementValue struct {
	Scope                []string `protobuf:"bytes,1,rep,name=Scope,json=scope,proto3" json:"Scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SecurityRequirement_SecurityRequirementValue) Reset() {
	*m = SecurityRequirement_SecurityRequirementValue{}
}
func (m *SecurityRequirement_SecurityRequirementValue) String() string {
	return proto.CompactTextString(m)
}
func (*SecurityRequirement_SecurityRequirementValue) ProtoMessage() {}
func (*SecurityRequirement_SecurityRequirementValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{13}
}

func (m *SecurityRequirement_SecurityRequirementValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityRequirement_SecurityRequirementValue.Unmarshal(m, b)
}
func (m *SecurityRequirement_SecurityRequirementValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityRequirement_SecurityRequirementValue.Marshal(b, m, deterministic)
}
func (m *SecurityRequirement_SecurityRequirementValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityRequirement_SecurityRequirementValue.Merge(m, src)
}
func (m *SecurityRequirement_SecurityRequirementValue) XXX_Size() int {
	return xxx_messageInfo_SecurityRequirement_SecurityRequirementValue.Size(m)
}
func (m *SecurityRequirement_SecurityRequirementValue) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityRequirement_SecurityRequirementValue.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityRequirement_SecurityRequirementValue proto.InternalMessageInfo

func (m *SecurityRequirement_SecurityRequirementValue) GetScope() []string {
	if m != nil {
		return m.Scope
	}
	return nil
}

//SecurityRequirement is a representation of OpenAPI v2 specification's
//Security Requirement object.
type SecurityRequirement struct {
	//Each name must correspond to a security scheme which is declared in
	//the Security Definitions. If the security scheme is of type "oauth2",
	//then the value is a list of scope names required for the execution.
	//For other security scheme types, the array MUST be empty.
	SecurityRequirement  map[string]*SecurityRequirement_SecurityRequirementValue `protobuf:"bytes,1,rep,name=SecurityRequirement,json=security_requirement,proto3" json:"SecurityRequirement,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *SecurityRequirement) Reset()         { *m = SecurityRequirement{} }
func (m *SecurityRequirement) String() string { return proto.CompactTextString(m) }
func (*SecurityRequirement) ProtoMessage()    {}
func (*SecurityRequirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{14}
}

func (m *SecurityRequirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SecurityRequirement.Unmarshal(m, b)
}
func (m *SecurityRequirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SecurityRequirement.Marshal(b, m, deterministic)
}
func (m *SecurityRequirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SecurityRequirement.Merge(m, src)
}
func (m *SecurityRequirement) XXX_Size() int {
	return xxx_messageInfo_SecurityRequirement.Size(m)
}
func (m *SecurityRequirement) XXX_DiscardUnknown() {
	xxx_messageInfo_SecurityRequirement.DiscardUnknown(m)
}

var xxx_messageInfo_SecurityRequirement proto.InternalMessageInfo

func (m *SecurityRequirement) GetSecurityRequirement() map[string]*SecurityRequirement_SecurityRequirementValue {
	if m != nil {
		return m.SecurityRequirement
	}
	return nil
}

func init() {
	proto.RegisterEnum("openapiv2.SwaggerScheme", SwaggerScheme_name, SwaggerScheme_value)
	proto.RegisterEnum("openapiv2.Type", Type_name, Type_value)
	proto.RegisterEnum("openapiv2.In", In_name, In_value)
	proto.RegisterEnum("openapiv2.Flow", Flow_name, Flow_value)
	proto.RegisterEnum("openapiv2.JSONSchemaSimpleTypes", JSONSchemaSimpleTypes_name, JSONSchemaSimpleTypes_value)
	proto.RegisterType((*Swagger)(nil), "openapiv2.Swagger")
	proto.RegisterMapType((map[string]*Response)(nil), "openapiv2.Swagger.ResponsesEntry")
	proto.RegisterType((*SecurityDefinitions)(nil), "openapiv2.SecurityDefinitions")
	proto.RegisterMapType((map[string]*SecurityScheme)(nil), "openapiv2.SecurityDefinitions.SecurityEntry")
	proto.RegisterType((*SecurityScheme)(nil), "openapiv2.SecurityScheme")
	proto.RegisterType((*Scopes)(nil), "openapiv2.Scopes")
	proto.RegisterMapType((map[string]string)(nil), "openapiv2.Scopes.ScopeEntry")
	proto.RegisterType((*Operation)(nil), "openapiv2.Operation")
	proto.RegisterMapType((map[string]*Response)(nil), "openapiv2.Operation.ResponsesEntry")
	proto.RegisterType((*ExternalDocumentation)(nil), "openapiv2.ExternalDocumentation")
	proto.RegisterType((*Response)(nil), "openapiv2.Response")
	proto.RegisterType((*Info)(nil), "openapiv2.Info")
	proto.RegisterType((*Contact)(nil), "openapiv2.Contact")
	proto.RegisterType((*License)(nil), "openapiv2.License")
	proto.RegisterType((*Schema)(nil), "openapiv2.Schema")
	proto.RegisterType((*JSONSchema)(nil), "openapiv2.JSONSchema")
	proto.RegisterType((*Any)(nil), "openapiv2.Any")
	proto.RegisterType((*SecurityRequirement_SecurityRequirementValue)(nil), "openapiv2.SecurityRequirement_SecurityRequirementValue")
	proto.RegisterType((*SecurityRequirement)(nil), "openapiv2.SecurityRequirement")
	proto.RegisterMapType((map[string]*SecurityRequirement_SecurityRequirementValue)(nil), "openapiv2.SecurityRequirement.SecurityRequirementEntry")
}

func init() { proto.RegisterFile("command-line-arguments/all.proto", fileDescriptor_4e5090b41d9b9746) }

var fileDescriptor_4e5090b41d9b9746 = []byte{
	// 1771 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x4f, 0x73, 0xdb, 0xc6,
	0x15, 0x07, 0xf8, 0x0f, 0xe4, 0xe3, 0x1f, 0x51, 0xb0, 0xd5, 0x41, 0x34, 0x9e, 0x0c, 0xeb, 0xa8,
	0xa9, 0xe2, 0xda, 0x4e, 0xaa, 0xa6, 0x93, 0x4c, 0x0e, 0x99, 0x52, 0x22, 0x1c, 0xd1, 0xa6, 0x48,
	0x86, 0xa0, 0xac, 0xba, 0x33, 0x1d, 0xcc, 0x86, 0x5c, 0x4a, 0xa8, 0x81, 0x05, 0x8d, 0x05, 0x65,
	0xb1, 0x87, 0x4e, 0xa7, 0xa7, 0xb6, 0xd3, 0x43, 0xef, 0xfd, 0x08, 0x9d, 0xe9, 0x39, 0xb7, 0x7e,
	0x84, 0xf6, 0xd8, 0x8f, 0xd2, 0x63, 0x67, 0x17, 0x0b, 0x10, 0x4b, 0xc0, 0x6a, 0x32, 0xf6, 0x49,
	0xc2, 0xbe, 0xdf, 0xfb, 0xbd, 0xb7, 0xef, 0x1f, 0x1e, 0x08, 0x9d, 0x99, 0xef, 0x79, 0x88, 0xcc,
	0x1f, 0xb9, 0x0e, 0xc1, 0x8f, 0x50, 0x70, 0xb9, 0xf2, 0x30, 0x09, 0xe9, 0xc7, 0xc8, 0x75, 0x1f,
	0x2f, 0x03, 0x3f, 0xf4, 0xf5, 0x9a, 0xbf, 0xc4, 0x04, 0x2d, 0x9d, 0xeb, 0xa3, 0xfb, 0xff, 0x2a,
	0x83, 0x66, 0xbd, 0x46, 0x97, 0x97, 0x38, 0xd0, 0x0f, 0x92, 0x7f, 0x0d, 0xb5, 0xa3, 0x1e, 0xd6,
	0x8e, 0xa1, 0xaa, 0x18, 0xca, 0xa1, 0xf2, 0x89, 0x32, 0x56, 0x26, 0x1a, 0x15, 0xa8, 0x8f, 0xa1,
	0xd4, 0x27, 0x0b, 0xdf, 0x28, 0x74, 0xd4, 0xc3, 0xfa, 0xd1, 0xce, 0xe3, 0x84, 0xeb, 0x31, 0x3b,
	0x96, 0x74, 0x4a, 0x0e, 0x59, 0xf8, 0xfa, 0xfb, 0x50, 0x3a, 0xf5, 0x69, 0x68, 0x14, 0x33, 0x9c,
	0xa5, 0x2b, 0x9f, 0x86, 0xfa, 0x8f, 0xa1, 0x7a, 0x8c, 0x28, 0x1e, 0xa3, 0xf0, 0xca, 0x28, 0x65,
	0x30, 0xb5, 0x6f, 0x10, 0xc5, 0xf6, 0x12, 0x85, 0x57, 0xfa, 0x97, 0xa0, 0x59, 0xb3, 0x2b, 0xec,
	0x61, 0x6a, 0x94, 0x3b, 0xc5, 0xc3, 0xd6, 0x91, 0x91, 0x32, 0x2e, 0x3c, 0x8f, 0x00, 0x5b, 0x9e,
	0x47, 0x4a, 0xfa, 0x87, 0x50, 0x3d, 0xf1, 0x09, 0x5d, 0x31, 0x82, 0x4a, 0xa7, 0xb8, 0x65, 0xa8,
	0x3a, 0x13, 0x32, 0x86, 0x1b, 0x07, 0xfe, 0x7c, 0x35, 0xc3, 0xd4, 0xd0, 0xb2, 0xb8, 0xa5, 0x90,
	0xe9, 0xcf, 0xa0, 0x36, 0xc1, 0x74, 0xe9, 0x13, 0x8a, 0xa9, 0x01, 0x9d, 0xe2, 0x61, 0xfd, 0xe8,
	0x87, 0x59, 0x8f, 0x1e, 0x27, 0x18, 0x93, 0x84, 0xc1, 0x5a, 0xbe, 0x5c, 0x10, 0xcb, 0xf4, 0x5f,
	0xc3, 0x1d, 0x0b, 0xcf, 0x56, 0x81, 0x13, 0xae, 0x7b, 0x78, 0xe1, 0x10, 0x27, 0x74, 0x7c, 0x42,
	0x8d, 0x3a, 0x8f, 0xf2, 0xfb, 0x69, 0xda, 0x2c, 0x4a, 0xe2, 0xbc, 0x4b, 0x05, 0xc0, 0x9e, 0x6f,
	0x10, 0xfa, 0x13, 0xa8, 0xc6, 0x8a, 0x46, 0x83, 0xbb, 0x9a, 0xc7, 0x39, 0xc1, 0xaf, 0x56, 0x4e,
	0x80, 0x59, 0xbd, 0xc8, 0x77, 0x8e, 0x39, 0xf5, 0xaf, 0xa1, 0x61, 0xde, 0x84, 0x38, 0x20, 0xc8,
	0xed, 0xf9, 0x33, 0x6a, 0xb4, 0xb8, 0x7f, 0x9d, 0x14, 0x57, 0x4a, 0xcc, 0x0b, 0x0f, 0x31, 0x07,
	0x24, 0xb6, 0x26, 0x16, 0x10, 0x7b, 0xee, 0xcf, 0xe8, 0xbe, 0x09, 0x2d, 0x39, 0x44, 0x7a, 0x1d,
	0x8a, 0x2f, 0xf1, 0x3a, 0x2a, 0x42, 0xfd, 0x3e, 0x94, 0xaf, 0x91, 0xbb, 0xc2, 0xa2, 0xe0, 0xee,
	0xa4, 0x4c, 0xc5, 0x6a, 0x5f, 0x14, 0x3e, 0x57, 0xbf, 0xa8, 0x54, 0x95, 0xb6, 0x62, 0x28, 0xf7,
	0xff, 0xa9, 0xe6, 0x46, 0x52, 0x9f, 0xa6, 0x22, 0xa0, 0xf2, 0x08, 0x3c, 0xbc, 0x3d, 0xaa, 0xc9,
	0x59, 0x36, 0x6f, 0x49, 0x3c, 0xf6, 0x9f, 0x42, 0x53, 0x82, 0xc9, 0xbe, 0x1f, 0xca, 0xbe, 0xbf,
	0x97, 0x63, 0x30, 0x2a, 0x58, 0xe9, 0x06, 0x7f, 0x29, 0x42, 0x4b, 0x16, 0xb3, 0xa6, 0x9b, 0xae,
	0x97, 0x98, 0xd3, 0xb6, 0xa4, 0xa6, 0x63, 0xc7, 0x72, 0x53, 0x85, 0xeb, 0x25, 0xd6, 0x1f, 0x42,
	0xbd, 0x87, 0xe9, 0x2c, 0x70, 0x96, 0xec, 0x2e, 0xdc, 0xbe, 0x5c, 0xc6, 0xf5, 0xf9, 0x46, 0xcc,
	0x5a, 0x74, 0x88, 0x3c, 0x9c, 0xd7, 0xa2, 0x04, 0x79, 0x58, 0xff, 0x08, 0x0a, 0x7d, 0xc2, 0x9b,
	0xb3, 0x75, 0xd4, 0x94, 0x3a, 0x5e, 0x02, 0x17, 0x1c, 0xc2, 0x3c, 0x7d, 0xe2, 0xfa, 0xaf, 0x8d,
	0x72, 0xc6, 0x53, 0x76, 0x2c, 0x73, 0x2f, 0x5c, 0xff, 0xb5, 0xfe, 0x19, 0xb4, 0xbb, 0xab, 0xf0,
	0xca, 0x0f, 0x9c, 0xdf, 0xf2, 0x52, 0x39, 0x9f, 0x0c, 0x8c, 0x4a, 0xc6, 0x8f, 0x5d, 0x94, 0xc6,
	0xd8, 0xab, 0xc0, 0x65, 0x73, 0x63, 0xea, 0xbf, 0xc4, 0x5c, 0x41, 0xcb, 0xce, 0x8d, 0x90, 0xc9,
	0x38, 0xf0, 0xe7, 0x50, 0xb1, 0x66, 0xfe, 0x12, 0x53, 0xa3, 0xca, 0xd3, 0xb0, 0x9b, 0x4e, 0x03,
	0x17, 0x48, 0x9a, 0x15, 0xca, 0xcf, 0x92, 0x74, 0xfc, 0x2e, 0x56, 0xd7, 0xbf, 0x84, 0x32, 0xff,
	0x4f, 0xd4, 0xcf, 0xbd, 0x0c, 0x4f, 0xf4, 0x27, 0x5b, 0x2f, 0x65, 0x4e, 0xb9, 0xff, 0x10, 0x60,
	0x03, 0x90, 0x2b, 0xa5, 0x99, 0xae, 0x94, 0x9a, 0x54, 0x0e, 0x7f, 0x2a, 0x43, 0x6d, 0xb4, 0xc4,
	0x01, 0x8a, 0x53, 0x35, 0x45, 0x97, 0x94, 0xbb, 0xb0, 0x95, 0xaa, 0x10, 0x5d, 0x52, 0x3e, 0xc4,
	0x57, 0x9e, 0x87, 0x82, 0x75, 0x4e, 0xd2, 0x35, 0x1a, 0x89, 0xb6, 0xcb, 0xa3, 0x78, 0x7b, 0x79,
	0x6c, 0x37, 0x7d, 0xe9, 0xad, 0x9b, 0x5e, 0x7f, 0x04, 0xf5, 0xe4, 0x4e, 0xfd, 0x1e, 0xaf, 0x16,
	0xd9, 0x81, 0x86, 0x1f, 0x8b, 0x6d, 0x67, 0xfe, 0xce, 0x47, 0xf7, 0x59, 0x7a, 0x74, 0xd7, 0x78,
	0x36, 0x3f, 0x48, 0x5d, 0x27, 0x71, 0xed, 0x3b, 0x0e, 0xef, 0x83, 0xcd, 0x9b, 0x09, 0x32, 0x56,
	0x93, 0xf7, 0xcf, 0x03, 0x80, 0x1e, 0x5e, 0x06, 0x78, 0x86, 0x42, 0x3c, 0xe7, 0x93, 0xbd, 0x2a,
	0x01, 0x61, 0x9e, 0x48, 0xdf, 0xd5, 0xbc, 0x7e, 0xd7, 0xc3, 0xf5, 0x25, 0xec, 0xe5, 0xa6, 0x7a,
	0xbb, 0xa0, 0xd4, 0xdb, 0x0b, 0xea, 0x1e, 0x14, 0x59, 0xd7, 0x66, 0x0b, 0xb4, 0xb8, 0x0a, 0xdc,
	0xc4, 0xd8, 0x6b, 0xa8, 0xc6, 0x4e, 0x7c, 0x4f, 0x7e, 0xde, 0xf1, 0x57, 0xd8, 0x43, 0xe2, 0x5e,
	0x72, 0xc7, 0x33, 0xc1, 0x76, 0xc7, 0xb3, 0xb3, 0xc4, 0xf0, 0x3f, 0x0a, 0xd1, 0x8e, 0xa3, 0x77,
	0xa0, 0x3c, 0x75, 0x42, 0x17, 0xe7, 0xd8, 0x2b, 0x87, 0x4c, 0xf0, 0x3d, 0xe7, 0xec, 0xa7, 0xd0,
	0x9a, 0xe2, 0xc0, 0xa3, 0xa3, 0x85, 0x85, 0x83, 0x6b, 0x67, 0x96, 0x37, 0x71, 0xdb, 0x21, 0x43,
	0xd8, 0xfe, 0xc2, 0xa6, 0x11, 0x46, 0xff, 0x1c, 0xb4, 0x13, 0x9f, 0x84, 0x68, 0x16, 0x8a, 0xce,
	0xd3, 0x53, 0xd7, 0x11, 0x12, 0xb9, 0xe2, 0x66, 0xd1, 0x21, 0xd3, 0x1c, 0x38, 0x33, 0x4c, 0x28,
	0xe6, 0x1d, 0x26, 0x6b, 0x0a, 0x89, 0xac, 0xe9, 0x46, 0x87, 0xac, 0xa2, 0x9f, 0xe3, 0x80, 0xb2,
	0x3b, 0x65, 0x87, 0xb1, 0x76, 0x1d, 0x89, 0x92, 0x80, 0xbd, 0x4a, 0x3c, 0x4c, 0x5e, 0x25, 0xea,
	0x1b, 0x5e, 0x25, 0xb7, 0xa6, 0x9e, 0x05, 0xdc, 0xf4, 0x90, 0xe3, 0xe6, 0xc4, 0xa5, 0x8c, 0x99,
	0x20, 0x31, 0x39, 0x4a, 0xae, 0xf6, 0x76, 0x26, 0x13, 0xc2, 0x6f, 0x0b, 0x71, 0xd1, 0xe8, 0xc7,
	0x00, 0x4f, 0xad, 0xd1, 0x50, 0x94, 0x90, 0xca, 0x23, 0xb7, 0x97, 0x8a, 0xdc, 0x46, 0x28, 0xa7,
	0xfa, 0x37, 0xd4, 0x27, 0x76, 0x54, 0x4b, 0xfa, 0x27, 0xd0, 0xec, 0x39, 0x2c, 0xf3, 0x9e, 0x43,
	0x50, 0xe8, 0x07, 0x39, 0xe6, 0x9b, 0xf3, 0x34, 0x80, 0xbd, 0xcf, 0x26, 0x18, 0xcd, 0x47, 0xc4,
	0x5d, 0xf3, 0xeb, 0x57, 0xb7, 0xa7, 0x0d, 0x9a, 0xdb, 0x3e, 0x71, 0xb3, 0x3b, 0x58, 0xf9, 0xed,
	0xc7, 0xf1, 0xa7, 0xa0, 0x99, 0x37, 0xc8, 0x5b, 0xba, 0x98, 0xa7, 0xbb, 0x7e, 0xd4, 0x4a, 0xb1,
	0x75, 0x89, 0x3c, 0xf8, 0x34, 0x1c, 0x41, 0x93, 0xd0, 0xfd, 0x5d, 0x4b, 0x07, 0x8c, 0xc5, 0x7b,
	0x82, 0x17, 0x39, 0x29, 0x2c, 0x06, 0x78, 0xb1, 0xe9, 0xa9, 0xf2, 0x77, 0xec, 0xa9, 0xca, 0xed,
	0x3d, 0x75, 0x00, 0x5a, 0x0f, 0x2f, 0xd0, 0xca, 0x0d, 0x73, 0xb6, 0x00, 0x6d, 0x1e, 0x89, 0xa4,
	0xe0, 0x56, 0x6f, 0x0b, 0xee, 0x4f, 0x00, 0xce, 0x56, 0x6e, 0xe8, 0x2c, 0x5d, 0x3c, 0x5a, 0x18,
	0xd0, 0x51, 0x0f, 0x55, 0xd9, 0xb6, 0x27, 0xa4, 0xb6, 0xbf, 0x60, 0xb6, 0xcf, 0xd0, 0x8d, 0xe3,
	0xad, 0x3c, 0x3e, 0xce, 0x65, 0xa4, 0xe6, 0x45, 0x22, 0xb6, 0xe1, 0x98, 0x37, 0x33, 0x77, 0x45,
	0x9d, 0x6b, 0x1c, 0xc3, 0x1b, 0x19, 0x1f, 0x76, 0x71, 0x8c, 0xb1, 0x63, 0x45, 0x46, 0xef, 0x10,
	0x8e, 0x6f, 0xe6, 0xd0, 0x47, 0x22, 0x99, 0x5e, 0xc0, 0x5b, 0xb7, 0xd2, 0x0b, 0xc5, 0x8f, 0xa0,
	0x76, 0x86, 0x6e, 0x06, 0x98, 0x5c, 0x86, 0x57, 0xc6, 0x4e, 0x47, 0x3d, 0x2c, 0xc9, 0xaf, 0x23,
	0x0f, 0xdd, 0xd8, 0x2e, 0x97, 0x72, 0xa8, 0x43, 0x04, 0xb4, 0x9d, 0x03, 0x75, 0x48, 0x0c, 0x3d,
	0x00, 0x6d, 0x8c, 0x42, 0x56, 0x5c, 0xc6, 0x6e, 0x36, 0x1f, 0xcb, 0x48, 0xc4, 0xf2, 0x71, 0x86,
	0x6e, 0xfa, 0x21, 0xf6, 0xa8, 0x71, 0x37, 0xc3, 0x57, 0x63, 0xa6, 0x1d, 0x26, 0xe4, 0x40, 0x87,
	0x44, 0xc0, 0xbd, 0x1c, 0xa0, 0x43, 0x04, 0xf0, 0x11, 0xd4, 0xcf, 0x89, 0xf3, 0x6a, 0x85, 0x23,
	0xec, 0x0f, 0x32, 0x11, 0x68, 0xac, 0xb8, 0x58, 0xc0, 0x7f, 0x0a, 0xcd, 0x33, 0x74, 0x33, 0x0e,
	0xd8, 0x9a, 0x11, 0x3a, 0x98, 0x1a, 0x46, 0x86, 0xbc, 0xc5, 0xbc, 0x58, 0x26, 0x08, 0xae, 0xe2,
	0x90, 0x94, 0xca, 0x7b, 0x39, 0x2a, 0x0e, 0x49, 0xab, 0x7c, 0xc8, 0xca, 0x8e, 0xbf, 0xa3, 0xe7,
	0xc6, 0x7e, 0x76, 0x1f, 0x09, 0x84, 0x8c, 0x35, 0x45, 0x37, 0x08, 0xd0, 0xda, 0xb8, 0x9f, 0x01,
	0x95, 0x11, 0x13, 0xe8, 0xbf, 0x10, 0x5f, 0x00, 0x1f, 0xf0, 0x2f, 0xdf, 0x4e, 0xee, 0x34, 0xb2,
	0x1c, 0xd6, 0x96, 0x0c, 0x46, 0xb3, 0x9f, 0x04, 0x49, 0xb7, 0x3e, 0x87, 0x62, 0x97, 0xac, 0xf5,
	0x1f, 0x81, 0xc6, 0x90, 0x6c, 0x32, 0x66, 0x07, 0x67, 0x95, 0x69, 0xd8, 0x62, 0x22, 0x3f, 0x4f,
	0x36, 0x84, 0x86, 0xec, 0x19, 0x5f, 0x1d, 0x12, 0xde, 0x5f, 0xc2, 0xc3, 0x9c, 0xbd, 0xc4, 0xce,
	0x39, 0xe3, 0x84, 0x8c, 0x79, 0xb3, 0x4d, 0xd7, 0x72, 0xf6, 0xe5, 0x84, 0xf9, 0xcf, 0x85, 0xcd,
	0x27, 0x5d, 0x8a, 0x46, 0xbf, 0xce, 0x3d, 0x16, 0xdb, 0xf9, 0x67, 0xb7, 0xef, 0x4b, 0x79, 0x67,
	0xd9, 0x1d, 0x6f, 0xf3, 0x31, 0x1d, 0x6c, 0x60, 0xfb, 0x14, 0x8c, 0x37, 0x69, 0xcb, 0xeb, 0xd5,
	0x13, 0x79, 0xbd, 0xfa, 0x3f, 0x2e, 0xbd, 0x31, 0x54, 0xe9, 0x15, 0xec, 0xc1, 0x25, 0x34, 0xa5,
	0xdf, 0x3a, 0xf4, 0x7b, 0x70, 0x57, 0x3a, 0x38, 0x1f, 0x3e, 0x1b, 0x8e, 0x2e, 0x86, 0x6d, 0x65,
	0xbf, 0x50, 0x55, 0xf4, 0x06, 0x94, 0x4e, 0xa7, 0xd3, 0x71, 0x5b, 0xe5, 0x4f, 0x4d, 0x28, 0xb3,
	0x27, 0xab, 0x5d, 0xe0, 0x8f, 0x00, 0x85, 0x0b, 0xab, 0x5d, 0xe4, 0xff, 0xd7, 0xa1, 0x78, 0x61,
	0x59, 0xed, 0x12, 0x7b, 0xd8, 0x2f, 0x18, 0xca, 0x03, 0x3b, 0xaa, 0x38, 0xfd, 0x2e, 0x34, 0xa6,
	0x2f, 0xc6, 0xa6, 0xdd, 0x1f, 0x3e, 0xef, 0x0e, 0xfa, 0x3d, 0xc1, 0xab, 0x03, 0xf0, 0xd3, 0xe3,
	0xae, 0xd5, 0x3f, 0x11, 0xec, 0x31, 0xb2, 0x3b, 0xee, 0xdb, 0xcf, 0xcc, 0x17, 0xc2, 0xc8, 0x1d,
	0xa8, 0xf3, 0xd3, 0x51, 0xf7, 0x7c, 0x7a, 0x7a, 0x14, 0x59, 0xe3, 0x06, 0xba, 0xec, 0xab, 0x92,
	0x11, 0xf5, 0x87, 0x5b, 0xe4, 0x6d, 0xa8, 0xf6, 0x87, 0xf6, 0xd7, 0xe7, 0xe6, 0xe4, 0x85, 0xa0,
	0xde, 0x85, 0x5a, 0x7f, 0x68, 0x9f, 0x9a, 0xdd, 0x9e, 0x39, 0x89, 0x78, 0x39, 0xc5, 0x1f, 0xd4,
	0xe8, 0x73, 0x93, 0x99, 0x7e, 0x32, 0x18, 0x5d, 0x6c, 0xf1, 0xec, 0x41, 0x33, 0x3a, 0x3d, 0x1b,
	0x0f, 0xfa, 0x27, 0xfd, 0xa9, 0x20, 0x8b, 0x8f, 0xc7, 0x5d, 0xcb, 0xba, 0x18, 0x4d, 0x7a, 0xc2,
	0x51, 0x03, 0xda, 0xfc, 0xb8, 0x3b, 0x66, 0xe8, 0xee, 0xb4, 0x3f, 0x1a, 0x8a, 0xd8, 0x24, 0x92,
	0x93, 0x13, 0xd3, 0xb2, 0xec, 0x93, 0x51, 0xcf, 0x4c, 0x05, 0xea, 0x6f, 0x2a, 0xec, 0xe5, 0x36,
	0xa1, 0xbe, 0x03, 0x9a, 0x9c, 0x8d, 0x26, 0x94, 0xbb, 0x93, 0x49, 0x37, 0xbe, 0xd5, 0x0e, 0x68,
	0xc7, 0xa3, 0xd1, 0xc0, 0xec, 0x0e, 0x85, 0x0b, 0x3b, 0xa0, 0xf5, 0x87, 0x53, 0xf3, 0x2b, 0x73,
	0x22, 0x2c, 0x37, 0xa0, 0x34, 0x3c, 0x1f, 0x0c, 0x22, 0x6b, 0x7a, 0x0b, 0x2a, 0xc3, 0xf3, 0xb3,
	0x63, 0x73, 0xd2, 0x2e, 0xc7, 0xcf, 0xa3, 0xe3, 0xa7, 0xe6, 0xc9, 0xb4, 0x5d, 0x89, 0x9f, 0xad,
	0xe9, 0xa4, 0x3f, 0xfc, 0xaa, 0xad, 0xc5, 0xde, 0x1d, 0x1f, 0x9c, 0xaa, 0x63, 0xe5, 0x57, 0x9b,
	0x9f, 0xfc, 0x7e, 0xaf, 0x2a, 0x7f, 0x54, 0x95, 0xbf, 0xaa, 0xca, 0xb7, 0xaa, 0xf2, 0x1f, 0x55,
	0xf9, 0xaf, 0xaa, 0xfc, 0xbb, 0xa0, 0x7c, 0x53, 0xe1, 0xbf, 0x0c, 0xfe, 0xec, 0x7f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x1f, 0x24, 0x9b, 0x2a, 0x3d, 0x14, 0x00, 0x00,
}
-- service/doc.go --
package service
-- service/service.gunk --
package service

// Deprecated is the deprecated option.
type Deprecated bool
