# Check that the project root is assumed to be where the .git folder is.
gunk generate ./gitfolder
exists gitfolder/all.pb.go
! exists gitfolder/all_pb2.py

# Check that the project root is assumed to be where the .git file is.
gunk generate ./gitfile
exists gitfile/all.pb.go
! exists gitfile/all_pb2.py

# Check that the project root is assumed to be where the go.mod file it.
# The parent module can't see packages inside the child module, so cd into it.
# Go 1.13 and later errors directly; hence the second error match.
! gunk generate ./gomod
stderr 'no Gunk packages to generate|directory gomod is outside main module'

cd gomod
gunk generate .
exists all.pb.go
! exists all_pb2.py

# Add a gunk config not in the project root.
# This should not get picked up
-- go.mod --
module root
-- .gunkconfig --
[generate python]
-- gitfolder/.git/config --
-- gitfolder/.gunkconfig --
[generate]
command=protoc-gen-go
plugin_version=v1.4.3
plugins=grpc
-- gitfolder/util.gunk --
package util

type Message struct {
	Msg string `pb:"1"`
}

type Util interface {
	// Echo echoes a message.
	Echo(Message) Message
}

-- gitfile/.git --
-- gitfile/.gunkconfig --
[generate]
command=protoc-gen-go
plugin_version=v1.4.3
plugins=grpc
-- gitfile/util.gunk --
package util

type Message struct {
	Msg string `pb:"1"`
}

type Util interface {
	// Echo echoes a message.
	Echo(Message) Message
}

-- gomod/go.mod --
module testdata.tld/util
-- gomod/.gunkconfig --
[generate]
command=protoc-gen-go
plugin_version=v1.4.3
plugins=grpc
-- gomod/util.gunk --
package util

type Message struct {
	Msg string `pb:"1"`
}

type Util interface {
	// Echo echoes a message.
	Echo(Message) Message
}
