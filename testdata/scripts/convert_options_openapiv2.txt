env HOME=$WORK/home

gunk convert util.proto
cmp util.gunk util.gunk.golden

-- util.proto --
syntax = "proto3";

package util;

message GetAccountRequest { string account_id = 1; }

// Account contains information for a specific account.
message Account {
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    json_schema : {
      title : "Account detail"
      description : "Detail information of account"
    }
  };
  option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
	  example: { value: '{ "success": true, "error_code": "0", "error_message": "" }' }
  };
  string account_id = 1;
}

// AccountService provides account management service endpoints.
service AccountService {
  // GetAccount retrieves account information.
  rpc GetAccount(GetAccountRequest) returns (Account) {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      description : "Get account information"
      summary : "Retrieves account information"
      tags : "Account"
    };
    option (google.api.http) = {
      get : "/v1/account/{account_id}"
    };
  }
}

-- util.gunk.golden --
package util

import (
	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
)

type GetAccountRequest struct {
	AccountID string `pb:"1" json:"account_id"`
}

// Account contains information for a specific account.
type Account struct {
	// +gunk openapiv2.Schema{
	//         JSONSchema: openapiv2.JSONSchema{Title: "Account detail", Description: "Detail information of account"},
	// }
	// +gunk openapiv2.Schema{
	//         Example: map[string]string{"value": `{"success":true,"error_code":"0","error_message":""}`},
	// }
	AccountID string `pb:"1" json:"account_id"`
}

// AccountService provides account management service endpoints.
type AccountService interface {
	// GetAccount retrieves account information.
	//
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Account"},
	//         Description: "Get account information",
	//         Summary:     "Retrieves account information",
	// }
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/account/{AccountID}",
	// }
	GetAccount(GetAccountRequest) Account
}