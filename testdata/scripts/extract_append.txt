gunk generate first.gunk
gunk generate second.gunk
cmp messages.pot messages.pot.golden
cmp all.md all.md.golden

-- go.mod --
module testdata.tld/util

require (
	github.com/gunk/opt v0.0.0-20190514110406-385321f21939
)
-- .gunkconfig --
[generate]
command=docgen
mode=append
-- first.gunk --
// +gunk openapiv2.Swagger{
//         Swagger: "2.0",
//         Info: openapiv2.Info{
//                 Title:       "First API",
//                 Version:     "1.0.0",
//         },
//         Host: "openbank.com",
//         BasePath: "/path",
//         Schemes: []openapiv2.SwaggerScheme{
//                 openapiv2.HTTPS,
//         },
// }
package docgentest

import (
	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
)

type Foo struct {
	// Bar is a string
	Bar string `pb:"1" json:"bar"`
}

// FooService provides foo operations.
type FooService interface {
	// GetFoo gets foo
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/foo",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Foo"},
	//         Summary: "Gets foo",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                 },
	//         },
	// }
	GetFoo() Foo
}
-- second.gunk --
// +gunk openapiv2.Swagger{
//         Swagger: "2.0",
//         Info: openapiv2.Info{
//                 Title:       "Second API",
//                 Version:     "1.0.0",
//         },
//         Host: "openbank.com",
//         BasePath: "/path",
//         Schemes: []openapiv2.SwaggerScheme{
//                 openapiv2.HTTPS,
//         },
// }
package docgentest

import (
	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
)

type Baz struct {
	// Qux is an int
	Qux int `pb:"1" json:"qux"`
}

// BazService provides baz operations.
type SecondService interface {
	// GetBaz gets baz
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/baz",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Baz"},
	//         Summary: "Gets baz",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                 },
	//         },
	// }
	GetBaz() Baz
}
-- messages.pot.golden --
# Messages.pot - Contains all msgid extracted from swagger definitions.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid   ""
msgstr  "Project-Id-Version: %s\n"
		"Report-Msgid-Bugs-To: %s\n"
		"POT-Creation-Date: %s\n"
		"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
		"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
		"Language-Team: LANGUAGE <LL@li.org>\n"
		"Language: \n"
		"MIME-Version: 1.0\n"
		"Content-Type: text/plain; charset=CHARSET\n"
		"Content-Transfer-Encoding: 8bit\n"

msgid "Bar is a string"
msgstr ""

msgid "Base Path"
msgstr ""

msgid "First API"
msgstr ""

msgid "Gets baz"
msgstr ""

msgid "Gets foo"
msgstr ""

msgid "HTTP Request"
msgstr ""

msgid "Host"
msgstr ""

msgid "Qux is an int"
msgstr ""

msgid "Response body"
msgstr ""

msgid "Response codes"
msgstr ""

msgid "Responses"
msgstr ""

msgid "Second API"
msgstr ""

msgid "USE_YOUR_TOKEN"
msgstr ""
-- all.md.golden --
# First API v1.0.0

* Host `https://openbank.com`

* Base Path `/path`

## Gets foo

```sh
curl -X GET \
	https://openbank.com/path/v1/foo \
	-H 'Authorization: Bearer USE_YOUR_TOKEN'
```

### HTTP Request

`GET https://openbank.com/path/v1/foo`

### Responses

#### Response body

| Name | Type   | Description     |
|------|--------|-----------------|
| bar  | string | Bar is a string |

Example:

```json
{
  "bar": "string"
}
```

#### Response codes

| Status | Description |
|--------|-------------|
| 200    |             |

# Second API v1.0.0

* Host `https://openbank.com`

* Base Path `/path`

## Gets baz

```sh
curl -X GET \
	https://openbank.com/path/v1/baz \
	-H 'Authorization: Bearer USE_YOUR_TOKEN'
```

### HTTP Request

`GET https://openbank.com/path/v1/baz`

### Responses

#### Response body

| Name | Type  | Description   |
|------|-------|---------------|
| qux  | int32 | Qux is an int |

Example:

```json
{
  "qux": "int32"
}
```

#### Response codes

| Status | Description |
|--------|-------------|
| 200    |             |
