gunk generate ./...
cmp accounts/all.md accounts/all.md.golden
cmp accounts/messages.pot accounts/messages.pot.golden
! exists types/types.md
! exists types/messages.pot.golden

-- go.mod --
module testdata.tld/util

require (
	github.com/gunk/opt v0.0.0-20190514110406-385321f21939
)
-- .gunkconfig --
[generate]
command=docgen
-- accounts/accounts.gunk --
// +gunk openapiv2.Swagger{
//         Swagger: "2.0",
//         Info: openapiv2.Info{
//                 Title:       "Accounts API",
//                 Version:     "1.0.0",
//         },
//         Host: "openbank.com",
//         BasePath: "/path",
//         Schemes: []openapiv2.SwaggerScheme{
//                 openapiv2.HTTPS,
//         },
// }
package accounts

import (
	"time"

	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"

	types "testdata.tld/util/types"
)

// Account holds all details about a bank account.
type Account struct {
	// AmountDue is here to make sure docgen works for import files.
	AmountDue types.Amount `pb:"1" json:"amount_due"`
}

// AccountService provides Account operations.
type AccountService interface {
	// GetAccount gets account
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/account",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:     []string{"Account"},
	//         Summary:  "Retrieve an account",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{},
	//         },
	// }
	GetAccount() Account
}

-- types/types.gunk --
package types

// Amount defines a transaction amount.
type Amount struct {
	// Cur is the currency of the amount.
	Cur string `pb:"1" json:"cur"`
	// Num is the value of the amount.
	Num string `pb:"2" json:"num"`
}
-- accounts/all.md.golden --
# Accounts API v1.0.0

* Host `https://openbank.com`

* Base Path `/path`

## Retrieve an account

```sh
curl -X GET \
	https://openbank.com/path/v1/account \
	-H 'Authorization: Bearer USE_YOUR_TOKEN'
```

### HTTP Request

`GET https://openbank.com/path/v1/account`

### Responses

#### Response body

| Name       | Type   | Description                                                   |
|------------|--------|---------------------------------------------------------------|
| amount_due | Amount | AmountDue is here to make sure docgen works for import files. |

##### Objects

###### Amount

| Name | Type   | Description                        |
|------|--------|------------------------------------|
| cur  | string | Cur is the currency of the amount. |
| num  | string | Num is the value of the amount.    |

Example:

```json
{
  "amount_due": {
    "cur": "string",
    "num": "string"
  }
}
```

#### Response codes

| Status | Description |
|--------|-------------|
| 200    |             |
-- accounts/messages.pot.golden --
# Messages.pot - Contains all msgid extracted from swagger definitions.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid   ""
msgstr  "Project-Id-Version: %s\n"
		"Report-Msgid-Bugs-To: %s\n"
		"POT-Creation-Date: %s\n"
		"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
		"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
		"Language-Team: LANGUAGE <LL@li.org>\n"
		"Language: \n"
		"MIME-Version: 1.0\n"
		"Content-Type: text/plain; charset=CHARSET\n"
		"Content-Transfer-Encoding: 8bit\n"

msgid "Accounts API"
msgstr ""

msgid "AmountDue is here to make sure docgen works for import files."
msgstr ""

msgid "Base Path"
msgstr ""

msgid "Cur is the currency of the amount."
msgstr ""

msgid "HTTP Request"
msgstr ""

msgid "Host"
msgstr ""

msgid "Num is the value of the amount."
msgstr ""

msgid "Objects"
msgstr ""

msgid "Response body"
msgstr ""

msgid "Response codes"
msgstr ""

msgid "Responses"
msgstr ""

msgid "Retrieve an account"
msgstr ""

msgid "USE_YOUR_TOKEN"
msgstr ""
