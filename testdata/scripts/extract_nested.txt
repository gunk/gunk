# the two main points to note in this test are that the Transaction struct's Amount
# field is a nested message that itself contains a nested message (Currency),
# and it also contains two instances of the Account struct.
#
# the generated markdown correctly displays the doubly nested message
# and only defines the Account object once.
gunk generate transactions.gunk
cmp all.md all.md.golden
cmp messages.pot messages.pot.golden

-- go.mod --
module testdata.tld/util

require (
	github.com/gunk/opt v0.0.0-20190514110406-385321f21939
)
-- .gunkconfig --
[generate]
command=docgen
-- transactions.gunk --
// +gunk openapiv2.Swagger{
//         Swagger: "2.0",
//         Info: openapiv2.Info{
//                 Title:       "Transactions API", 
//                 Description: "Provides create and read operations on the transaction resource.",
//                 Version:     "1.0.0",
//         },
//         Host:     "openbank.com",
//         BasePath: "/path",
//         Schemes: []openapiv2.SwaggerScheme{
//                 openapiv2.HTTPS,
//         },
// }
package transactions

import (
	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
)

// Transaction defines a transaction.
type Transaction struct {
	// ID is the transaction ID.
	ID string `pb:"1" json:"id"`

	// Amount is the transaction amount.
	Amount Amount `pb:"2" json:"amount"`

	// To is the account to credit.
	To Account `pb:"3" json:"to"`

	// From is the account to debit.
	From Account `pb:"4" json:"from"`
}

// Account represents an account.
type Account struct {
	// Number is the account number.
	Number string `pb:"1" json:"number"`

	// Name is the name associated with the account.
	Name string `pb:"2" json:"name"`
}

// Amount represents an amount.
type Amount struct {
	// Curr is the currency for the amount
	Curr Currency `pb:"1" json:"curr"`

	// Num is the numerical value of the amount.
	Num  string   `pb:"2" json:"num"`
}

// Currency reprsents a currency
type Currency struct {
	// Common is the common name for a currency.
	Common string `pb:"1" json:"common"`

	// ISO4217 is the ISO 4217 currency code.
	ISO4217    string `pb:"2" json:"iso"`
}

// GetTransactionRequest is the request envelope to get an transaction by its identifier.
type GetTransactionRequest struct {
	// TransactionID is the unique identifier of a transaction.
	TransactionID string `pb:"1" json:"transaction_id"`
}

// CreateTransactionResponse is the response envelope for creating a transaction.
type CreateTransactionResponse struct {
	// TransactionID is the unique identifier for the recorded transaction.
	TransactionID string `pb:"1" json:"transaction_id"`
}

// TransactionService provides transaction-related operations.
type TransactionService interface {
	// GetTransaction retrieves the details of a transaction.
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/transactions/{TransactionID}",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Transaction"},
	//         Description: "Retrieves all data from a transaction, selected by the `transaction_id` you supplied.",
	//         Summary:     "Retrieve a transaction",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                         Description: "Request executed successfully.",
	//                 },
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource is not found.",
	//                 },
	//         },
	// }
	GetTransaction(GetTransactionRequest) Transaction

	// CreateTransaction creates a transaction record.
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/transactions",
	//         Body:   "*",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Transaction"},
	//         Description: "Creates a new transaction record",
	//         Summary:     "Create a transaction",
	//         Responses: map[string]openapiv2.Response{
	//                 "201": openapiv2.Response{
	//                         Description: "Transaction created successfully.",
	//                 },
	//         },
	// }
	CreateTransaction(Transaction) CreateTransactionResponse
}
-- all.md.golden --
# Transactions API v1.0.0

Provides create and read operations on the transaction resource.

* Host `https://openbank.com`

* Base Path `/path`

## Create a transaction

Creates a new transaction record

```sh
curl -X POST \
	https://openbank.com/path/v1/transactions \
	-H 'Authorization: Bearer USE_YOUR_TOKEN' \
	-d '{
		"id": "string",
		"amount": {
			"curr": {
				"common": "string",
				"iso": "string"
			},
			"num": "string"
		},
		"to": {
			"number": "string",
			"name": "string"
		},
		"from": {
			"number": "string",
			"name": "string"
		}
	}'
```
### HTTP Request

`POST https://openbank.com/path/v1/transactions`

### Body Parameters

| Name   | Type    | Description                       |
|--------|---------|-----------------------------------|
| id     | string  | ID is the transaction ID.         |
| amount | Amount  | Amount is the transaction amount. |
| to     | Account | To is the account to credit.      |
| from   | Account | From is the account to debit.     |

##### Objects

###### Amount

| Name | Type     | Description                               |
|------|----------|-------------------------------------------|
| curr | Currency | Curr is the currency for the amount       |
| num  | string   | Num is the numerical value of the amount. |

###### Account

| Name   | Type   | Description                                   |
|--------|--------|-----------------------------------------------|
| number | string | Number is the account number.                 |
| name   | string | Name is the name associated with the account. |

###### Currency

| Name   | Type   | Description                               |
|--------|--------|-------------------------------------------|
| common | string | Common is the common name for a currency. |
| iso    | string | ISO4217 is the ISO 4217 currency code.    |

### Responses

#### Response body

| Name           | Type   | Description                                                          |
|----------------|--------|----------------------------------------------------------------------|
| transaction_id | string | TransactionID is the unique identifier for the recorded transaction. |

Example:

```json
{
  "transaction_id": "string"
}
```
#### Response codes

| Status | Description                       |
|--------|-----------------------------------|
| 201    | Transaction created successfully. |

## Retrieve a transaction

Retrieves all data from a transaction, selected by the `transaction_id` you supplied.

```sh
curl -X GET \
	https://openbank.com/path/v1/transactions/{TransactionID} \
	-H 'Authorization: Bearer USE_YOUR_TOKEN'
```
### HTTP Request

`GET https://openbank.com/path/v1/transactions/{TransactionID}`

### Query Parameters

| Name           | Type   | Description                                              |
|----------------|--------|----------------------------------------------------------|
| transaction_id | string | TransactionID is the unique identifier of a transaction. |

### Responses

#### Response body

| Name   | Type    | Description                       |
|--------|---------|-----------------------------------|
| id     | string  | ID is the transaction ID.         |
| amount | Amount  | Amount is the transaction amount. |
| to     | Account | To is the account to credit.      |
| from   | Account | From is the account to debit.     |

##### Objects

###### Amount

| Name | Type     | Description                               |
|------|----------|-------------------------------------------|
| curr | Currency | Curr is the currency for the amount       |
| num  | string   | Num is the numerical value of the amount. |

###### Account

| Name   | Type   | Description                                   |
|--------|--------|-----------------------------------------------|
| number | string | Number is the account number.                 |
| name   | string | Name is the name associated with the account. |

###### Currency

| Name   | Type   | Description                               |
|--------|--------|-------------------------------------------|
| common | string | Common is the common name for a currency. |
| iso    | string | ISO4217 is the ISO 4217 currency code.    |

Example:

```json
{
  "id": "string",
  "amount": {
    "curr": {
      "common": "string",
      "iso": "string"
    },
    "num": "string"
  },
  "to": {
    "number": "string",
    "name": "string"
  },
  "from": {
    "number": "string",
    "name": "string"
  }
}
```
#### Response codes

| Status | Description                              |
|--------|------------------------------------------|
| 200    | Request executed successfully.           |
| 404    | Returned when the resource is not found. |
-- messages.pot.golden --
# Messages.pot - Contains all msgid extracted from swagger definitions.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid   ""
msgstr  "Project-Id-Version: %s\n"
		"Report-Msgid-Bugs-To: %s\n"
		"POT-Creation-Date: %s\n"
		"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
		"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
		"Language-Team: LANGUAGE <LL@li.org>\n"
		"Language: \n"
		"MIME-Version: 1.0\n"
		"Content-Type: text/plain; charset=CHARSET\n"
		"Content-Transfer-Encoding: 8bit\n"

msgid "Amount is the transaction amount."
msgstr ""

msgid "Base Path"
msgstr ""

msgid "Body Parameters"
msgstr ""

msgid "Common is the common name for a currency."
msgstr ""

msgid "Create a transaction"
msgstr ""

msgid "Creates a new transaction record"
msgstr ""

msgid "Curr is the currency for the amount"
msgstr ""

msgid "From is the account to debit."
msgstr ""

msgid "HTTP Request"
msgstr ""

msgid "Host"
msgstr ""

msgid "ID is the transaction ID."
msgstr ""

msgid "ISO4217 is the ISO 4217 currency code."
msgstr ""

msgid "Name is the name associated with the account."
msgstr ""

msgid "Num is the numerical value of the amount."
msgstr ""

msgid "Number is the account number."
msgstr ""

msgid "Objects"
msgstr ""

msgid "Provides create and read operations on the transaction resource."
msgstr ""

msgid "Query Parameters"
msgstr ""

msgid "Request executed successfully."
msgstr ""

msgid "Response body"
msgstr ""

msgid "Response codes"
msgstr ""

msgid "Responses"
msgstr ""

msgid "Retrieve a transaction"
msgstr ""

msgid "Retrieves all data from a transaction, selected by the `transaction_id` you supplied."
msgstr ""

msgid "Returned when the resource is not found."
msgstr ""

msgid "To is the account to credit."
msgstr ""

msgid "Transaction created successfully."
msgstr ""

msgid "TransactionID is the unique identifier for the recorded transaction."
msgstr ""

msgid "TransactionID is the unique identifier of a transaction."
msgstr ""

msgid "Transactions API"
msgstr ""

msgid "USE_YOUR_TOKEN"
msgstr ""
