# formatting an empty Gunk package should fail
! gunk format ./empty
stderr 'no Gunk packages to format'

# formatting a normal package and checking the result
gunk format .
cmp echo.gunk echo.gunk.golden

# no args is equivalent to "."
cd broken
! gunk format
stderr 'echo.gunk:1'
cd ..

-- go.mod --
module testdata.tld/util
-- empty/empty.go --
package empty // no Gunk files
-- broken/echo.gunk --
package
-- echo.gunk --
// +gunk java.Package("com.testdata.v1")
// +gunk file.Deprecated(true)
package util   // proto "testdata.v1.util"

import (
"github.com/gunk/opt/file"
"github.com/gunk/opt/file/java"
)

type Message struct {
Text string    `pb:"1" json:"text"`
}

// Util is a utility service.
type Util interface {
// Echo echoes a message.
//
// +gunk http.Match{
// Method: "POST",
// Path: "/v1/echo",
// Body: "*",
// }
Echo(Message) Message

// +gunk http.Match{
// Method: "POST",
// Path: "/v1/echo",
// Body: "*",
// }
Echo2(Message) Message
}

-- echo.gunk.golden --
// +gunk java.Package("com.testdata.v1")
// +gunk file.Deprecated(true)
package util // proto "testdata.v1.util"

import (
	"github.com/gunk/opt/file"
	"github.com/gunk/opt/file/java"
)

type Message struct {
	Text string `pb:"1" json:"text"`
}

// Util is a utility service.
type Util interface {
	// Echo echoes a message.
	//
	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/echo",
	//         Body:   "*",
	// }
	Echo(Message) Message

	// +gunk http.Match{
	//         Method: "POST",
	//         Path:   "/v1/echo",
	//         Body:   "*",
	// }
	Echo2(Message) Message
}
