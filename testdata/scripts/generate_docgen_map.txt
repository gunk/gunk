gunk generate ./...
cmp all.md all.md.golden
cmp messages.pot messages.pot.golden

-- go.mod --
module testdata.tld/util

require (
	github.com/gunk/opt v0.0.0-20190514110406-385321f21939
)
-- .gunkconfig --
[generate]
command=docgen
-- docgentest.gunk --
// +gunk openapiv2.Swagger{
//         Swagger: "2.0",
//         Info: openapiv2.Info{
//                 Title:       "Sample API",
//                 Version:     "1.0.0",
//         },
//         Host: "openbank.com",
//         BasePath: "/path",
//         Schemes: []openapiv2.SwaggerScheme{
//                 openapiv2.HTTPS,
//         },
// }
package docgentest

import (
	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
)

// Sample holds all details about a bank account.
type Sample struct {
	// MapStringInt is a simple map of a <string,int>.
	MapStringInt   map[string]int   `pb:"1" json:"map_string_int"`
	// MapStringInt is a simple map of a <int,string>.
	MapIntString   map[int]string   `pb:"2" json:"map_int_string"`
	// MapStringPrice is a sample map of <string,price>.
	MapStringPrice map[string]Price `pb:"3" json:"map_string_price"`
}

type Price struct {
	Amount   int    `pb:"1" json:"amount"`
	Currency string `pb:"2" json:"currency"`
}

// SampleService provides Sample operations.
type SampleService interface {
	// GetSample gets sample
	//
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/sample",
	// }
	// +gunk openapiv2.Operation{
	//         Tags:        []string{"Sample"},
	//         Summary: "Gets sample",
	//         Responses: map[string]openapiv2.Response{
	//                 "200": openapiv2.Response{
	//                 },
	//         },
	// }
	GetSample() Sample
}
-- all.md.golden --
# Sample API v1.0.0

* Host `https://openbank.com`

* Base Path `/path`

## Gets sample

```sh
curl -X GET \
	https://openbank.com/path/v1/sample \
	-H 'Authorization: Bearer USE_YOUR_TOKEN'
```

### HTTP Request

`GET https://openbank.com/path/v1/sample`

### Responses

#### Response body

| Name             | Type                                              | Description |
|------------------|---------------------------------------------------|-------------|
| map[string]int32 | MapStringInt is a simple map of a <string,int>.   |             |
| map[int]string   | MapStringInt is a simple map of a <int,string>.   |             |
| map[string]Price | MapStringPrice is a sample map of <string,price>. |             |

Example:

```json
{
  "": "map[string]int32",
  "": "map[int]string",
  "": "map[string]Price"
}
```

#### Response codes

| Status | Description |
|--------|-------------|
| 200    |             |
-- messages.pot.golden --
# Messages.pot - Contains all msgid extracted from swagger definitions.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid   ""
msgstr  "Project-Id-Version: %s\n"
		"Report-Msgid-Bugs-To: %s\n"
		"POT-Creation-Date: %s\n"
		"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
		"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
		"Language-Team: LANGUAGE <LL@li.org>\n"
		"Language: \n"
		"MIME-Version: 1.0\n"
		"Content-Type: text/plain; charset=CHARSET\n"
		"Content-Transfer-Encoding: 8bit\n"

msgid "Base Path"
msgstr ""

msgid "Gets sample"
msgstr ""

msgid "HTTP Request"
msgstr ""

msgid "Host"
msgstr ""

msgid "MapStringInt is a simple map of a <int,string>."
msgstr ""

msgid "MapStringInt is a simple map of a <string,int>."
msgstr ""

msgid "MapStringPrice is a sample map of <string,price>."
msgstr ""

msgid "Response body"
msgstr ""

msgid "Response codes"
msgstr ""

msgid "Responses"
msgstr ""

msgid "Sample API"
msgstr ""

msgid "USE_YOUR_TOKEN"
msgstr ""
