gunk generate echo.gunk

cmp all.swagger.json all.swagger.json.golden

-- go.mod --
module testdata.tld/util

require (
	github.com/gunk/opt v0.0.0-20190514110406-385321f21939
)
-- .gunkconfig --
[generate swagger]
-- echo.gunk --
// +gunk openapiv2.Swagger{
//         Swagger: "2.0",
//         Info: openapiv2.Info{
//                 Title: "this is a title",
//         },
// }
package test

import (
	"github.com/gunk/opt/http"
	"github.com/gunk/opt/openapiv2"
)

// Message comment
type Message struct {
	Name string `pb:"1" json:"name"`
}

type Service interface {
	// +gunk openapiv2.Operation{
	//         Tags: []string{
	//                 "tag 1",
	//                 "tag 2",
	//         },
	//         Summary:     "Retrieves message",
	//         Description: "Get message",
	//         ExternalDocs: openapiv2.ExternalDocumentation{
	//                 Description: "Find out more about GetQuery",
	//                 URL:         "https://github.com/grpc-ecosystem/grpc-gateway",
	//         },
	//         OperationID: "operation_id",
	//         Consumes: []string{
	//                 "application/json",
	//         },
	//         Produces: []string{
	//                 "application/xml",
	//         },
	//         Responses: map[string]openapiv2.Response{
	//                 "404": openapiv2.Response{
	//                         Description: "Returned when the resource does not exist.",
	//                 },
	//         },
	//         Schemes: []string{
	//                 "scheme 1",
	//                 "scheme 2",
	//         },
	//         Deprecated: true,
	//         Security: []openapiv2.SecurityRequirement{
	//                 {
	//                         SecurityRequirement: map[string]openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                 "ApiKeyAuth": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "update",
	//                                         },
	//                                 },
	//                                 "OAuth2": openapiv2.SecurityRequirement_SecurityRequirementValue{
	//                                         Scope: []string{
	//                                                 "read",
	//                                                 "write",
	//                                         },
	//                                 },
	//                         },
	//                 },
	//         },
	// }
	// +gunk http.Match{
	//         Method: "GET",
	//         Path:   "/v1/message/{Name}",
	// }
	GetMessage(Message) Message
}
-- all.swagger.json.golden --
{
  "swagger": "2.0",
  "info": {
    "title": "this is a title",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/message/{Name}": {
      "get": {
        "summary": "Retrieves message",
        "description": "Get message",
        "operationId": "operation_id",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/testMessage"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "Name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "tag 1",
          "tag 2"
        ],
        "deprecated": true,
        "produces": [
          "application/xml"
        ],
        "security": [
          {
            "ApiKeyAuth": [
              "update"
            ],
            "OAuth2": [
              "read",
              "write"
            ]
          }
        ],
        "externalDocs": {
          "description": "Find out more about GetQuery",
          "url": "https://github.com/grpc-ecosystem/grpc-gateway"
        }
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "testMessage": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        }
      },
      "title": "Message comment"
    }
  }
}
